[{"OriginalCompleteBefore": "return findAll(ClassOrInterfaceDeclaration.class).stream().filter(cid -> cid.getNameAsString().equals(className)).findFirst();", "OriginalCompleteAfter": "return findAll(ClassOrInterfaceDeclaration.class).stream().filter(cid -> cid.getFullyQualifiedName().get().endsWith(className)).collect(Collectors.toList());", "Before": "findAll(ClassOrInterfaceDeclaration.class).stream().filter(cid -> cid.getNameAsString().equals(className)).findFirst()", "After": "findAll(ClassOrInterfaceDeclaration.class).stream().filter(cid -> cid.getFullyQualifiedName().get().endsWith(className)).collect(Collectors.toList())", "Project": "javaparser", "Commit": "e487f616b25e42de70721747460ed071061fa8ac", "CompilationUnit": "com.github.javaparser.ast.CompilationUnit", "LineNos": {"_1": 508, "_2": 509}, "Names": {"_1": "getLocaleDeclarationFromClassname", "_2": "getLocalDeclarationFromClassname"}, "TemplateVariableToCodeBefore": {"v0": "findAll(ClassOrInterfaceDeclaration.class)", "v1": "cid", "v2": "className"}, "RelevantImports": ["java.util.stream.Collectors"], "TemplateVariableToCodeAfter": {"v0": "findAll(ClassOrInterfaceDeclaration.class)", "v1": "cid", "v2": "className"}, "isRelevant": "Returns", "isSafe": true}]