[{"OriginalCompleteBefore": "return userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search)).skip(firstResult).limit(maxResults).map(userName -> createUser(realm,userName)).collect(Collectors.toList());", "OriginalCompleteAfter": "return userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search)).map(userName -> createUser(realm,userName));", "Before": "userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search)).skip(firstResult).limit(maxResults).map(userName -> createUser(realm,userName)).collect(Collectors.toList())", "After": "userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search)).map(userName -> createUser(realm,userName))", "Project": "keycloak", "Commit": "aa4673517308a2f6b8214b192eb2151554564718", "CompilationUnit": "org.keycloak.testsuite.federation.UserMapStorage", "LineNos": {"_1": 321, "_2": 309}, "Names": {"_1": "searchForUser", "_2": "searchForUserStream"}, "TemplateVariableToCodeBefore": {"v0": "userName -> createUser(realm,userName)", "v1": "userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search))"}, "RelevantImports": ["java.util.stream.Collectors"], "TemplateVariableToCodeAfter": {"v0": "userName -> createUser(realm,userName)", "v1": "userPasswords.keySet().stream().sorted().filter(userName -> userName.contains(search))"}, "isRelevant": "Returns", "isSafe": false}]