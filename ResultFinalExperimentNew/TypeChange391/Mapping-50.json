[{"OriginalCompleteBefore": "return getFederatedStorage().getConsents(realm,userId);", "OriginalCompleteAfter": "return getFederatedStorage().getConsentsStream(realm,userId);", "Before": "getFederatedStorage().getConsents(realm,userId)", "After": "getFederatedStorage().getConsentsStream(realm,userId)", "Project": "keycloak", "Commit": "aa4673517308a2f6b8214b192eb2151554564718", "CompilationUnit": "org.keycloak.storage.UserStorageManager", "LineNos": {"_1": 547, "_2": 539}, "Names": {"_1": "getConsents", "_2": "getConsentsStream"}, "TemplateVariableToCodeBefore": {"v0": "getFederatedStorage()", "v1": "realm", "v2": "userId"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "getFederatedStorage()", "v1": "realm", "v2": "userId"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return localStorage().getConsents(realm,userId);", "OriginalCompleteAfter": "return localStorage().getConsentsStream(realm,userId);", "Before": "localStorage().getConsents(realm,userId)", "After": "localStorage().getConsentsStream(realm,userId)", "Project": "keycloak", "Commit": "aa4673517308a2f6b8214b192eb2151554564718", "CompilationUnit": "org.keycloak.storage.UserStorageManager", "LineNos": {"_1": 547, "_2": 539}, "Names": {"_1": "getConsents", "_2": "getConsentsStream"}, "TemplateVariableToCodeBefore": {"v0": "localStorage()", "v1": "realm", "v2": "userId"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "localStorage()", "v1": "realm", "v2": "userId"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return getDelegate().getConsents(realm,userId);", "OriginalCompleteAfter": "return getDelegate().getConsentsStream(realm,userId);", "Before": "getDelegate().getConsents(realm,userId)", "After": "getDelegate().getConsentsStream(realm,userId)", "Project": "keycloak", "Commit": "aa4673517308a2f6b8214b192eb2151554564718", "CompilationUnit": "org.keycloak.models.cache.infinispan.UserCacheSession", "LineNos": {"_1": 710, "_2": 709}, "Names": {"_1": "getConsents", "_2": "getConsentsStream"}, "TemplateVariableToCodeBefore": {"v0": "getDelegate()", "v1": "realm", "v2": "userId"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "getDelegate()", "v1": "realm", "v2": "userId"}, "isRelevant": "Returns", "isSafe": true}]