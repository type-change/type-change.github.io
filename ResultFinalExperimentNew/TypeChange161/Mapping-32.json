[{"OriginalCompleteBefore": "final Map<String,SingularitySlaveUsage> currentSlaveUsagesBySlaveId=usageManager.getCurrentSlaveUsages(offerHolders.stream().map(SingularityOfferHolder::getSlaveId).collect(Collectors.toList()));", "OriginalCompleteAfter": "final Map<String,SingularitySlaveUsage> currentSlaveUsagesBySlaveId=usageManager.getCurrentSlaveUsages(offerHolders.values().stream().map(SingularityOfferHolder::getSlaveId).collect(Collectors.toList()));", "Before": "offerHolders", "After": "offerHolders.values()", "Project": "Singularity", "Commit": "7d0e9c39ec18bb4e018b70f30d874c872463c981", "CompilationUnit": "com.hubspot.singularity.mesos.SingularityMesosOfferScheduler", "LineNos": {"_1": 111, "_2": 109}, "Names": {"_1": "offerHolders", "_2": "offerHolders"}, "TemplateVariableToCodeBefore": {"TCIVar": "offerHolders"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "offerHolders"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "generatedClass.addMember(generateHashCodeMethod(hashCodeFieldStatement));", "OriginalCompleteAfter": "generatedClass.addMember(generateHashCodeMethod(hashCodeFieldStatement.values(),hasSuper));", "Before": "hashCodeFieldStatement", "After": "hashCodeFieldStatement.values()", "Project": "drools", "Commit": "b2f0e50eff5dd45a3963ecd20fb28e88c724cf9f", "CompilationUnit": "org.drools.modelcompiler.builder.generator.POJOGenerator", "LineNos": {"_1": 156, "_2": 158}, "Names": {"_1": "hashCodeFieldStatement", "_2": "hashCodeFieldStatement"}, "TemplateVariableToCodeBefore": {"TCIVar": "hashCodeFieldStatement"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "hashCodeFieldStatement"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "generatedClass.addMember(generateEqualsMethod(generatedClassName,equalsFieldStatement));", "OriginalCompleteAfter": "generatedClass.addMember(generateEqualsMethod(generatedClassName,equalsFieldStatement.values(),hasSuper));", "Before": "equalsFieldStatement", "After": "equalsFieldStatement.values()", "Project": "drools", "Commit": "b2f0e50eff5dd45a3963ecd20fb28e88c724cf9f", "CompilationUnit": "org.drools.modelcompiler.builder.generator.POJOGenerator", "LineNos": {"_1": 155, "_2": 157}, "Names": {"_1": "equalsFieldStatement", "_2": "equalsFieldStatement"}, "TemplateVariableToCodeBefore": {"TCIVar": "equalsFieldStatement"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "equalsFieldStatement"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "ImmutableOpenMap<ShardId,ShardSnapshotStatus> shards=shards(snapshots,deletionsInProgress,currentState.metadata(),currentState.routingTable(),indexIds,useShardGenerations(version),repositoryData,repositoryName);", "OriginalCompleteAfter": "ImmutableOpenMap<ShardId,ShardSnapshotStatus> shards=shards(snapshots,deletionsInProgress,currentState.metadata(),currentState.routingTable(),indexIds.values(),useShardGenerations(version),repositoryData,repositoryName);", "Before": "indexIds", "After": "indexIds.values()", "Project": "elasticsearch", "Commit": "afb42fbf1bd378aab1c6586fbd855efff1a4122a", "CompilationUnit": "org.elasticsearch.snapshots.SnapshotsService.createSnapshot.executeConsistentStateUpdate", "LineNos": {"_1": 316, "_2": 316}, "Names": {"_1": "indexIds", "_2": "indexIds"}, "TemplateVariableToCodeBefore": {"TCIVar": "indexIds"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "indexIds"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return PCollectionViews.toAdditionalInputs(sideInputs);", "OriginalCompleteAfter": "return PCollectionViews.toAdditionalInputs(sideInputs.values());", "Before": "sideInputs", "After": "sideInputs.values()", "Project": "beam", "Commit": "64262a61402fad67d9ad8a66eaf6322593d3b5dc", "CompilationUnit": "org.apache.beam.sdk.transforms.ParDo.MultiOutput", "LineNos": {"_1": 766, "_2": 787}, "Names": {"_1": "sideInputs", "_2": "sideInputs"}, "TemplateVariableToCodeBefore": {"TCIVar": "sideInputs"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "sideInputs"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return PCollectionViews.toAdditionalInputs(sideInputs);", "OriginalCompleteAfter": "return PCollectionViews.toAdditionalInputs(sideInputs.values());", "Before": "sideInputs", "After": "sideInputs.values()", "Project": "beam", "Commit": "64262a61402fad67d9ad8a66eaf6322593d3b5dc", "CompilationUnit": "org.apache.beam.sdk.transforms.ParDo.SingleOutput", "LineNos": {"_1": 632, "_2": 632}, "Names": {"_1": "sideInputs", "_2": "sideInputs"}, "TemplateVariableToCodeBefore": {"TCIVar": "sideInputs"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "sideInputs"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "BuildOptions result=Iterables.getOnlyElement(results);", "OriginalCompleteAfter": "BuildOptions result=Iterables.getOnlyElement(results.values());", "Before": "results", "After": "results.values()", "Project": "bazel", "Commit": "f8fefba76e7fa24423a590d6ec1352ba70639dc7", "CompilationUnit": "com.google.devtools.build.lib.analysis.config.transitions.ComposingTransitionTest", "LineNos": {"_1": 45, "_2": 45}, "Names": {"_1": "results", "_2": "results"}, "TemplateVariableToCodeBefore": {"TCIVar": "results"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "results"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(sameFragments && toOptions.size() == 1 && Iterables.getOnlyElement(toOptions).equals(currentConfiguration.getOptions()))", "OriginalCompleteAfter": "if(sameFragments && toOptions.size() == 1 && Iterables.getOnlyElement(toOptions.values()).equals(currentConfiguration.getOptions()))", "Before": "toOptions", "After": "toOptions.values()", "Project": "bazel", "Commit": "f8fefba76e7fa24423a590d6ec1352ba70639dc7", "CompilationUnit": "com.google.devtools.build.lib.analysis.config.ConfigurationResolver", "LineNos": {"_1": 246, "_2": 246}, "Names": {"_1": "toOptions", "_2": "toOptions"}, "TemplateVariableToCodeBefore": {"TCIVar": "toOptions"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "toOptions"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return String.format(properties.getText(),parameters.toArray());", "OriginalCompleteAfter": "return String.format(properties.getText(),parameters.values().toArray());", "Before": "parameters", "After": "parameters.values()", "Project": "cas", "Commit": "43aeb5abf929de30ce9a8b8d22748357e0e3c0bd", "CompilationUnit": "org.apereo.cas.notifications.mail.EmailMessageBodyBuilder", "LineNos": {"_1": 32, "_2": 34}, "Names": {"_1": "parameters", "_2": "parameters"}, "TemplateVariableToCodeBefore": {"TCIVar": "parameters"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "parameters"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return String.format(contents,parameters.toArray());", "OriginalCompleteAfter": "return String.format(contents,parameters.values().toArray());", "Before": "parameters", "After": "parameters.values()", "Project": "cas", "Commit": "43aeb5abf929de30ce9a8b8d22748357e0e3c0bd", "CompilationUnit": "org.apereo.cas.notifications.mail.EmailMessageBodyBuilder", "LineNos": {"_1": 32, "_2": 34}, "Names": {"_1": "parameters", "_2": "parameters"}, "TemplateVariableToCodeBefore": {"TCIVar": "parameters"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "parameters"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "dataSources.forEach(life::add);", "OriginalCompleteAfter": "dataSources.values().forEach(life::add);", "Before": "dataSources", "After": "dataSources.values()", "Project": "neo4j", "Commit": "1ae3283b544bd5cb72a8d0bb11b2443b6d7ace03", "CompilationUnit": "org.neo4j.kernel.impl.transaction.state.DataSourceManager", "LineNos": {"_1": 59, "_2": 57}, "Names": {"_1": "dataSources", "_2": "dataSources"}, "TemplateVariableToCodeBefore": {"TCIVar": "dataSources"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "dataSources"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "handlers.forEach(handler -> {  long usageCount=handler.getUsageCount();  if (usageCount > 0) {    restUsageMap.put(handler.getName(),usageCount);  }});", "OriginalCompleteAfter": "handlers.values().forEach(handler -> {  long usageCount=handler.getUsageCount();  if (usageCount > 0) {    restUsageMap.put(handler.getName(),usageCount);  }});", "Before": "handlers", "After": "handlers.values()", "Project": "elasticsearch", "Commit": "cdd07c5927312c8d7a08d8bd79cc8fb31041505c", "CompilationUnit": "org.elasticsearch.usage.UsageService", "LineNos": {"_1": 55, "_2": 55}, "Names": {"_1": "handlers", "_2": "handlers"}, "TemplateVariableToCodeBefore": {"TCIVar": "handlers"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "handlers"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "allSnapshotIds.addAll(snapshotIds);", "OriginalCompleteAfter": "allSnapshotIds.addAll(snapshotIds.values());", "Before": "snapshotIds", "After": "snapshotIds.values()", "Project": "elasticsearch", "Commit": "743217a4309dbe11a0c6b597cd3eedf5156d78bc", "CompilationUnit": "org.elasticsearch.repositories.RepositoryData", "LineNos": {"_1": 64, "_2": 67}, "Names": {"_1": "snapshotIds", "_2": "snapshotIds"}, "TemplateVariableToCodeBefore": {"TCIVar": "snapshotIds"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "snapshotIds"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "List<SnapshotId> newSnapshotIds=snapshotIds.stream().filter(id -> snapshotId.equals(id) == false).collect(Collectors.toList());", "OriginalCompleteAfter": "Map<String,SnapshotId> newSnapshotIds=snapshotIds.values().stream().filter(id -> snapshotId.equals(id) == false).collect(Collectors.toMap(SnapshotId::getUUID,Function.identity()));", "Before": "snapshotIds", "After": "snapshotIds.values()", "Project": "elasticsearch", "Commit": "743217a4309dbe11a0c6b597cd3eedf5156d78bc", "CompilationUnit": "org.elasticsearch.repositories.RepositoryData", "LineNos": {"_1": 64, "_2": 67}, "Names": {"_1": "snapshotIds", "_2": "snapshotIds"}, "TemplateVariableToCodeBefore": {"TCIVar": "snapshotIds"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "snapshotIds"}, "isRelevant": "Uses", "isSafe": true}]