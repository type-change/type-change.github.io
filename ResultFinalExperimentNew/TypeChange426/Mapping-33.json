[{"OriginalCompleteBefore": "list = CollectionUtils.wrap(new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth()))", "OriginalCompleteAfter": "list = CollectionUtils.wrapList(new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth()))", "Before": "CollectionUtils.wrap(new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth()))", "After": "CollectionUtils.wrapList(new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth()),new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth()))", "Project": "cas", "Commit": "4a62272d468c8a221c04e36e56ed8ec9d378e9ef", "CompilationUnit": "org.apereo.cas.support.oauth.web.endpoints.OAuth20AccessTokenEndpointController", "LineNos": {"_1": 168, "_2": 170}, "Names": {"_1": "list", "_2": "list"}, "TemplateVariableToCodeBefore": {"v0": "new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth())", "v1": "new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth())", "v2": "new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth())"}, "RelevantImports": ["org.apereo.cas.util.CollectionUtils"], "TemplateVariableToCodeAfter": {"v0": "new AccessTokenPasswordGrantRequestExtractor(servicesManager,ticketRegistry,request,response,authenticationBuilder,centralAuthenticationService,casProperties.getAuthn().getOauth())", "v1": "new AccessTokenAuthorizationCodeGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth())", "v2": "new AccessTokenRefreshTokenGrantRequestExtractor(servicesManager,ticketRegistry,request,response,centralAuthenticationService,casProperties.getAuthn().getOauth())"}, "isRelevant": "AssignedTo", "isSafe": true}]