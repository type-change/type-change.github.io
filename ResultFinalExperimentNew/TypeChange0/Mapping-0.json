[{"OriginalCompleteBefore": "fos = new FileOutputStream(file,true)", "OriginalCompleteAfter": "fos = Files.newOutputStream(testFile(STR0))", "Before": "new FileOutputStream(file,true)", "After": "Files.newOutputStream(testFile(STR0))", "Project": "camel", "Commit": "ab8219262470cb15e9f62c7656e9837ed3c1b5e3", "CompilationUnit": "org.apache.camel.language.XPathSplitChoicePerformanceTest", "LineNos": {"_1": 151, "_2": 144}, "Names": {"_1": "fos", "_2": "fos"}, "TemplateVariableToCodeBefore": {"xyz": "new FileOutputStream(file,true)"}, "RelevantImports": ["java.io.FileOutputStream", "java.nio.file.Files"], "TemplateVariableToCodeAfter": {"xyz": "Files.newOutputStream(testFile(STR0))"}, "isRelevant": "AssignedTo", "isSafe": false}, {"OriginalCompleteBefore": "fos = new FileOutputStream(file,true)", "OriginalCompleteAfter": "fos = Files.newOutputStream(testFile(STR0))", "Before": "new FileOutputStream(file,true)", "After": "Files.newOutputStream(testFile(STR0))", "Project": "camel", "Commit": "ab8219262470cb15e9f62c7656e9837ed3c1b5e3", "CompilationUnit": "org.apache.camel.language.TokenPairIteratorSplitChoicePerformanceTest", "LineNos": {"_1": 151, "_2": 143}, "Names": {"_1": "fos", "_2": "fos"}, "TemplateVariableToCodeBefore": {"xyz": "new FileOutputStream(file,true)"}, "RelevantImports": ["java.io.FileOutputStream", "java.nio.file.Files"], "TemplateVariableToCodeAfter": {"xyz": "Files.newOutputStream(testFile(STR0))"}, "isRelevant": "AssignedTo", "isSafe": false}, {"OriginalCompleteBefore": "fos = new FileOutputStream(file,true)", "OriginalCompleteAfter": "fos = Files.newOutputStream(testFile(STR0))", "Before": "new FileOutputStream(file,true)", "After": "Files.newOutputStream(testFile(STR0))", "Project": "camel", "Commit": "ab8219262470cb15e9f62c7656e9837ed3c1b5e3", "CompilationUnit": "org.apache.camel.issues.SedaFileIdempotentIssueTest", "LineNos": {"_1": 53, "_2": 51}, "Names": {"_1": "fos", "_2": "fos"}, "TemplateVariableToCodeBefore": {"xyz": "new FileOutputStream(file,true)"}, "RelevantImports": ["java.io.FileOutputStream", "java.nio.file.Files"], "TemplateVariableToCodeAfter": {"xyz": "Files.newOutputStream(testFile(STR0))"}, "isRelevant": "AssignedTo", "isSafe": false}]