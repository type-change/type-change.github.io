[{"OriginalCompleteBefore": "variableDescriptors = TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "OriginalCompleteAfter": "variableDescriptorList = TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Before": "TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 230, "_2": 251}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "Collection<GenuineVariableDescriptor> variableDescriptors=TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptors();", "OriginalCompleteAfter": "List<GenuineVariableDescriptor> variableDescriptorList=TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptorList();", "Before": "TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 230, "_2": 251}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "variableDescriptors = TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "OriginalCompleteAfter": "variableDescriptorList = TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Before": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 130, "_2": 133}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "Collection<GenuineVariableDescriptor> variableDescriptors=TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors();", "OriginalCompleteAfter": "List<GenuineVariableDescriptor> variableDescriptorList=TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList();", "Before": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 130, "_2": 133}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "variableDescriptors = TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "OriginalCompleteAfter": "variableDescriptorList = TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Before": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 48, "_2": 51}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "Collection<GenuineVariableDescriptor> variableDescriptors=TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors();", "OriginalCompleteAfter": "List<GenuineVariableDescriptor> variableDescriptorList=TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList();", "Before": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptors()", "After": "TestdataEntityProvidingEntity.buildEntityDescriptor().getGenuineVariableDescriptorList()", "Project": "optaplanner", "Commit": "560891fea5692d6d62ec19d073a03f34e10b3d43", "CompilationUnit": "org.optaplanner.core.impl.heuristic.selector.move.generic.PillarSwapMoveTest", "LineNos": {"_1": 48, "_2": 51}, "Names": {"_1": "variableDescriptors", "_2": "variableDescriptorList"}, "TemplateVariableToCodeBefore": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "TestdataEntityProvidingEntity.buildEntityDescriptor()"}, "isRelevant": "AssignedTo", "isSafe": true}]