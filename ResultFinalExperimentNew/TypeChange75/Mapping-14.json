[{"OriginalCompleteBefore": "throw new IllegalStateException(STR0 + file.getAbsolutePath(),e);", "OriginalCompleteAfter": "throw new IllegalStateException(STR0 + filePath,e);", "Before": "file.getAbsolutePath()", "After": "file", "Project": "sonarqube", "Commit": "6782a76dcf2e42fea32116a22d1c3ecb8d2975fa", "CompilationUnit": "org.sonar.api.batch.fs.internal.FileMetadata.FileHashComputer", "LineNos": {"_1": 136, "_2": 134}, "Names": {"_1": "file", "_2": "filePath"}, "TemplateVariableToCodeBefore": {"TCIVar": "file"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "file"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "WebAppPropertyConverter.toProperties(webApp,etcPath.resolve(STR0).toFile(),contextXmlFile.getAbsolutePath());", "OriginalCompleteAfter": "WebAppPropertyConverter.toProperties(webApp,etcPath.resolve(STR0).toFile(),contextXml);", "Before": "contextXmlFile.getAbsolutePath()", "After": "contextXmlFile", "Project": "jetty.project", "Commit": "e8009240685136cfe84d28125c2cafb3ece20bc3", "CompilationUnit": "org.eclipse.jetty.maven.plugin.JettyDistroForker", "LineNos": {"_1": 58, "_2": 59}, "Names": {"_1": "contextXmlFile", "_2": "contextXml"}, "TemplateVariableToCodeBefore": {"TCIVar": "contextXmlFile"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "contextXmlFile"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(instanceBasePath.getAbsolutePath(),anyOf(startsWith(testDir1.getAbsolutePath()),startsWith(testDir2.getAbsolutePath())));", "OriginalCompleteAfter": "assertThat(instanceBasePath.getAbsolutePath(),anyOf(startsWith(testDir1),startsWith(testDir2)));", "Before": "testDir2.getAbsolutePath()", "After": "testDir2", "Project": "flink", "Commit": "390d36132927fe5a1bac1a53664c6c67ebe3e657", "CompilationUnit": "org.apache.flink.contrib.streaming.state.RocksDBStateBackendConfigTest", "LineNos": {"_1": 88, "_2": 99}, "Names": {"_1": "testDir2", "_2": "testDir2"}, "TemplateVariableToCodeBefore": {"TCIVar": "testDir2"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "testDir2"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(instanceBasePath.getAbsolutePath(),anyOf(startsWith(testDir1.getAbsolutePath()),startsWith(testDir2.getAbsolutePath())));", "OriginalCompleteAfter": "assertThat(instanceBasePath.getAbsolutePath(),anyOf(startsWith(testDir1),startsWith(testDir2)));", "Before": "testDir1.getAbsolutePath()", "After": "testDir1", "Project": "flink", "Commit": "390d36132927fe5a1bac1a53664c6c67ebe3e657", "CompilationUnit": "org.apache.flink.contrib.streaming.state.RocksDBStateBackendConfigTest", "LineNos": {"_1": 87, "_2": 98}, "Names": {"_1": "testDir1", "_2": "testDir1"}, "TemplateVariableToCodeBefore": {"TCIVar": "testDir1"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "testDir1"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "rocksDbBackend.setDbStoragePath(testDir1.getAbsolutePath());", "OriginalCompleteAfter": "rocksDbBackend.setDbStoragePaths(testDir1,testDir2);", "Before": "testDir1.getAbsolutePath()", "After": "testDir1", "Project": "flink", "Commit": "390d36132927fe5a1bac1a53664c6c67ebe3e657", "CompilationUnit": "org.apache.flink.contrib.streaming.state.RocksDBStateBackendConfigTest", "LineNos": {"_1": 87, "_2": 98}, "Names": {"_1": "testDir1", "_2": "testDir1"}, "TemplateVariableToCodeBefore": {"TCIVar": "testDir1"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "testDir1"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "rocksDbBackend.setDbStoragePaths(testDir1.getAbsolutePath(),testDir2.getAbsolutePath());", "OriginalCompleteAfter": "rocksDbBackend.setDbStoragePath(testDir1);", "Before": "testDir1.getAbsolutePath()", "After": "testDir1", "Project": "flink", "Commit": "390d36132927fe5a1bac1a53664c6c67ebe3e657", "CompilationUnit": "org.apache.flink.contrib.streaming.state.RocksDBStateBackendConfigTest", "LineNos": {"_1": 87, "_2": 98}, "Names": {"_1": "testDir1", "_2": "testDir1"}, "TemplateVariableToCodeBefore": {"TCIVar": "testDir1"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "testDir1"}, "isRelevant": "Uses", "isSafe": true}]