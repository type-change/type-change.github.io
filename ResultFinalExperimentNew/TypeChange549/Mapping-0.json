[{"OriginalCompleteBefore": "valueArray = (String[])state", "OriginalCompleteAfter": "stateArray = (Object[])state", "Before": "(String[])state", "After": "(Object[])state", "Project": "brave", "Commit": "95a63eb850c06a8983b722383d2b794076c5ce9b", "CompilationUnit": "brave.internal.baggage.FixedBaggageFieldsTest", "LineNos": {"_1": 44, "_2": 44}, "Names": {"_1": "valueArray", "_2": "stateArray"}, "TemplateVariableToCodeBefore": {"v0": "state"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "state"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "String[] valueArray=(String[])state;", "OriginalCompleteAfter": "Object[] stateArray=(Object[])state;", "Before": "(String[])state", "After": "(Object[])state", "Project": "brave", "Commit": "95a63eb850c06a8983b722383d2b794076c5ce9b", "CompilationUnit": "brave.internal.baggage.FixedBaggageFieldsTest", "LineNos": {"_1": 44, "_2": 44}, "Names": {"_1": "valueArray", "_2": "stateArray"}, "TemplateVariableToCodeBefore": {"v0": "state"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "state"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "args = (String[])context.getArguments()", "OriginalCompleteAfter": "args = (Object[])context.getArguments()", "Before": "(String[])context.getArguments()", "After": "(Object[])context.getArguments()", "Project": "geode", "Commit": "f111cfef8d192b97b35a2433a31bb58fd772f2d0", "CompilationUnit": "org.apache.geode.management.internal.cli.functions.ImportDataFunction", "LineNos": {"_1": 39, "_2": 40}, "Names": {"_1": "args", "_2": "args"}, "TemplateVariableToCodeBefore": {"v0": "context.getArguments()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "context.getArguments()"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "match4 = (String[])response.rows()[3][0]", "OriginalCompleteAfter": "match4 = (Object[])response.rows()[3][0]", "Before": "(String[])response.rows()[3][0]", "After": "(Object[])response.rows()[3][0]", "Project": "crate", "Commit": "fb63a3c0080e9e2c1d628b825aab67d4954bb798", "CompilationUnit": "io.crate.integrationtests.ArithmeticIntegrationTest", "LineNos": {"_1": 254, "_2": 247}, "Names": {"_1": "match4", "_2": "match4"}, "TemplateVariableToCodeBefore": {"v0": "response.rows()[3][0]"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "response.rows()[3][0]"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "match3 = (String[])response.rows()[2][0]", "OriginalCompleteAfter": "match3 = (Object[])response.rows()[2][0]", "Before": "(String[])response.rows()[2][0]", "After": "(Object[])response.rows()[2][0]", "Project": "crate", "Commit": "fb63a3c0080e9e2c1d628b825aab67d4954bb798", "CompilationUnit": "io.crate.integrationtests.ArithmeticIntegrationTest", "LineNos": {"_1": 250, "_2": 244}, "Names": {"_1": "match3", "_2": "match3"}, "TemplateVariableToCodeBefore": {"v0": "response.rows()[2][0]"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "response.rows()[2][0]"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "match2 = (String[])response.rows()[1][0]", "OriginalCompleteAfter": "match2 = (Object[])response.rows()[1][0]", "Before": "(String[])response.rows()[1][0]", "After": "(Object[])response.rows()[1][0]", "Project": "crate", "Commit": "fb63a3c0080e9e2c1d628b825aab67d4954bb798", "CompilationUnit": "io.crate.integrationtests.ArithmeticIntegrationTest", "LineNos": {"_1": 246, "_2": 241}, "Names": {"_1": "match2", "_2": "match2"}, "TemplateVariableToCodeBefore": {"v0": "response.rows()[1][0]"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "response.rows()[1][0]"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "match1 = (String[])response.rows()[0][0]", "OriginalCompleteAfter": "match1 = (Object[])response.rows()[0][0]", "Before": "(String[])response.rows()[0][0]", "After": "(Object[])response.rows()[0][0]", "Project": "crate", "Commit": "fb63a3c0080e9e2c1d628b825aab67d4954bb798", "CompilationUnit": "io.crate.integrationtests.ArithmeticIntegrationTest", "LineNos": {"_1": 242, "_2": 238}, "Names": {"_1": "match1", "_2": "match1"}, "TemplateVariableToCodeBefore": {"v0": "response.rows()[0][0]"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "response.rows()[0][0]"}, "isRelevant": "AssignedTo", "isSafe": true}]