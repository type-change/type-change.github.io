[{"OriginalCompleteBefore": "return input.subSequence(startNdx,currentNdx);", "OriginalCompleteAfter": "return input.subSequence(startNdx,currentNdx).toString();", "Before": "input.subSequence(startNdx,currentNdx)", "After": "input.subSequence(startNdx,currentNdx).toString()", "Project": "jodd", "Commit": "a55f6131b64a51ee6fbf7f33ffeb6a99af56ef7b", "CompilationUnit": "jodd.json.JsonParser", "LineNos": {"_1": 625, "_2": 625}, "Names": {"_1": "parseUnquotedStringContent", "_2": "parseUnquotedStringContent"}, "TemplateVariableToCodeBefore": {"v0": "input.subSequence(startNdx,currentNdx)"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "input.subSequence(startNdx,currentNdx)"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return input.subSequence(startNdx,ndx - 1);", "OriginalCompleteAfter": "return input.subSequence(startNdx,ndx - 1).toString();", "Before": "input.subSequence(startNdx,ndx - 1)", "After": "input.subSequence(startNdx,ndx - 1).toString()", "Project": "jodd", "Commit": "a55f6131b64a51ee6fbf7f33ffeb6a99af56ef7b", "CompilationUnit": "jodd.json.JsonParser", "LineNos": {"_1": 493, "_2": 493}, "Names": {"_1": "parseStringContent", "_2": "parseStringContent"}, "TemplateVariableToCodeBefore": {"v0": "input.subSequence(startNdx,ndx - 1)"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "input.subSequence(startNdx,ndx - 1)"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return elements().getBinaryName(typeElement);", "OriginalCompleteAfter": "return elements().getBinaryName(typeElement).toString();", "Before": "elements().getBinaryName(typeElement)", "After": "elements().getBinaryName(typeElement).toString()", "Project": "infinispan", "Commit": "6d285a1efab2cceabc073a716c228cea5e5b17c8", "CompilationUnit": "org.infinispan.component.processor.ComponentAnnotationProcessor", "LineNos": {"_1": 716, "_2": 585}, "Names": {"_1": "binaryName", "_2": "binaryName"}, "TemplateVariableToCodeBefore": {"v0": "elements().getBinaryName(typeElement)"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "elements().getBinaryName(typeElement)"}, "isRelevant": "Returns", "isSafe": true}]