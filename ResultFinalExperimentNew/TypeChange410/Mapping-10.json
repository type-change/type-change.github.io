[{"OriginalCompleteBefore": "affectedRows=in.readLong();", "OriginalCompleteAfter": "userDoesExist=in.readBoolean();", "Before": "in.readLong()", "After": "in.readBoolean()", "Project": "crate", "Commit": "c3e0bc39f2cb98561656da471cd1184511896d97", "CompilationUnit": "io.crate.operation.user.WriteUserResponse", "LineNos": {"_1": 29, "_2": 29}, "Names": {"_1": "affectedRows", "_2": "userDoesExist"}, "TemplateVariableToCodeBefore": {"v0": "in"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "in"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "len=in.readLong();", "OriginalCompleteAfter": "dir=in.readBoolean();", "Before": "in.readLong()", "After": "in.readBoolean()", "Project": "ignite", "Commit": "7b7233efeeacc0c65833dec925a73906d9880608", "CompilationUnit": "org.apache.ignite.internal.processors.igfs.IgfsListingEntry", "LineNos": {"_1": 46, "_2": 41}, "Names": {"_1": "len", "_2": "dir"}, "TemplateVariableToCodeBefore": {"v0": "in"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "in"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "lockId = in.readLong()", "OriginalCompleteAfter": "noCache = in.readBoolean()", "Before": "in.readLong()", "After": "in.readBoolean()", "Project": "alluxio", "Commit": "4d5230c8608760d39a8aa5e9c1ac190aec50ebe6", "CompilationUnit": "alluxio.network.protocol.RPCUFSBlockReadRequest", "LineNos": {"_1": 64, "_2": 65}, "Names": {"_1": "lockId", "_2": "noCache"}, "TemplateVariableToCodeBefore": {"v0": "in"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "in"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "long lockId=in.readLong();", "OriginalCompleteAfter": "boolean noCache=in.readBoolean();", "Before": "in.readLong()", "After": "in.readBoolean()", "Project": "alluxio", "Commit": "4d5230c8608760d39a8aa5e9c1ac190aec50ebe6", "CompilationUnit": "alluxio.network.protocol.RPCUFSBlockReadRequest", "LineNos": {"_1": 64, "_2": 65}, "Names": {"_1": "lockId", "_2": "noCache"}, "TemplateVariableToCodeBefore": {"v0": "in"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "in"}, "isRelevant": "AssignedTo", "isSafe": true}]