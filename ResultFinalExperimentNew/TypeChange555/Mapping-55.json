[{"OriginalCompleteBefore": "result.addAll(cacheQuery(cacheKey,PolicyScopeListQuery.class,() -> getPolicyStoreDelegate().findByScopeIds(Arrays.asList(id),resourceServerId),(revision,resources) -> new PolicyScopeListQuery(revision,cacheKey,id,resources.stream().map(resource -> resource.getId()).collect(Collectors.toSet()),resourceServerId),resourceServerId));", "OriginalCompleteAfter": "result.addAll(cacheQuery(cacheKey,PolicyScopeListQuery.class,() -> getPolicyStoreDelegate().findByScopeIds(Arrays.asList(id),resourceServerId),(revision,resources) -> new PolicyScopeListQuery(revision,cacheKey,id,resources.stream().map(resource -> resource.getId()).collect(Collectors.toSet()),resourceServerId),resourceServerId,null));", "Before": "result.addAll(cacheQuery(cacheKey,PolicyScopeListQuery.class,() -> getPolicyStoreDelegate().findByScopeIds(Arrays.asList(id),resourceServerId),(revision,resources) -> new PolicyScopeListQuery(revision,cacheKey,id,resources.stream().map(resource -> resource.getId()).collect(Collectors.toSet()),resourceServerId),resourceServerId))", "After": "result.addAll(cacheQuery(cacheKey,PolicyScopeListQuery.class,() -> getPolicyStoreDelegate().findByScopeIds(Arrays.asList(id),resourceServerId),(revision,resources) -> new PolicyScopeListQuery(revision,cacheKey,id,resources.stream().map(resource -> resource.getId()).collect(Collectors.toSet()),resourceServerId),resourceServerId,null))", "Project": "keycloak", "Commit": "80e5227bcdbea5111f6eb1424a2effa6f0aacf7a", "CompilationUnit": "org.keycloak.models.cache.infinispan.authorization.StoreFactoryCacheSession.PolicyCache", "LineNos": {"_1": 796, "_2": 810}, "Names": {"_1": "result", "_2": "result"}, "TemplateVariableToCodeBefore": {"TCIVar": "result", "v1": "id"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "result", "v1": "id"}, "isRelevant": "Uses", "isSafe": true}]