[{"OriginalCompleteBefore": "return patterns.stream().filter(pattern -> pattern.matches(lookupPath)).collect(Collectors.toCollection(() -> new TreeSet<>(new PathPatternComparator(lookupPath))));", "OriginalCompleteAfter": "return patterns.stream().filter(pattern -> pattern.matches(lookupPath)).collect(Collectors.toCollection(TreeSet::new));", "Before": "patterns.stream().filter(pattern -> pattern.matches(lookupPath)).collect(Collectors.toCollection(() -> new TreeSet<>(new PathPatternComparator(lookupPath))))", "After": "patterns.stream().filter(pattern -> pattern.matches(lookupPath)).collect(Collectors.toCollection(TreeSet::new))", "Project": "spring-framework", "Commit": "a5e54788ccedbe6eef7e7d87586364fdfd67c601", "CompilationUnit": "org.springframework.web.reactive.result.condition.PatternsRequestCondition", "LineNos": {"_1": 47, "_2": 48}, "Names": {"_1": "patterns", "_2": "patterns"}, "TemplateVariableToCodeBefore": {"v0": "patterns.stream().filter(pattern -> pattern.matches(lookupPath))"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "patterns.stream().filter(pattern -> pattern.matches(lookupPath))"}, "isRelevant": "Returns", "isSafe": true}]