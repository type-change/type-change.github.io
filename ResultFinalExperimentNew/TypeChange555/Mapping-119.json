[{"OriginalCompleteBefore": "updateFeatureList.addAll(Arrays.stream(annotatedElement.getAnnotationsByType(EnableFeature.class)).map(annotation -> new UpdateFeature(annotation.value(),annotation.skipRestart(),state == State.BEFORE ? FeatureAction.ENABLE : FeatureAction.DISABLE,annotation.onlyForProduct())).collect(Collectors.toList()));", "OriginalCompleteAfter": "updateFeatureSet.addAll(getUpdateFeaturesSet(annotatedElement,state));", "Before": "updateFeatureList.addAll(Arrays.stream(annotatedElement.getAnnotationsByType(EnableFeature.class)).map(annotation -> new UpdateFeature(annotation.value(),annotation.skipRestart(),state == State.BEFORE ? FeatureAction.ENABLE : FeatureAction.DISABLE,annotation.onlyForProduct())).collect(Collectors.toList()))", "After": "updateFeatureList.addAll(getUpdateFeaturesSet(annotatedElement,state))", "Project": "keycloak", "Commit": "0afd55f32c8f833dba9958cb3dd7c297dccb3edc", "CompilationUnit": "org.keycloak.testsuite.arquillian.containers.KeycloakContainerFeaturesController", "LineNos": {"_1": 149, "_2": 164}, "Names": {"_1": "updateFeatureList", "_2": "updateFeatureSet"}, "TemplateVariableToCodeBefore": {"TCIVar": "updateFeatureList", "v1": "annotatedElement"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "updateFeatureList", "v1": "annotatedElement"}, "isRelevant": "Uses", "isSafe": false}]