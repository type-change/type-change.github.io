[{"OriginalCompleteBefore": "return ImmutableList.of(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build());", "OriginalCompleteAfter": "return Collections.singletonList(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build());", "Before": "ImmutableList.of(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build())", "After": "Collections.singletonList(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build())", "Project": "sonarqube", "Commit": "d7d92c0f177566e68e5354f8e589f2aaa1ee8302", "CompilationUnit": "org.sonar.scanner.genericcoverage.GenericTestExecutionSensor", "LineNos": {"_1": 56, "_2": 57}, "Names": {"_1": "properties", "_2": "properties"}, "TemplateVariableToCodeBefore": {"v0": "PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build()"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_UNIT_TEST_REPORT_PATHS_PROPERTY_KEY).build()"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return ImmutableList.of(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build());", "OriginalCompleteAfter": "return Collections.singletonList(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build());", "Before": "ImmutableList.of(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build())", "After": "Collections.singletonList(PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build())", "Project": "sonarqube", "Commit": "d7d92c0f177566e68e5354f8e589f2aaa1ee8302", "CompilationUnit": "org.sonar.scanner.genericcoverage.GenericCoverageSensor", "LineNos": {"_1": 72, "_2": 73}, "Names": {"_1": "properties", "_2": "properties"}, "TemplateVariableToCodeBefore": {"v0": "PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build()"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "PropertyDefinition.builder(REPORT_PATHS_PROPERTY_KEY).name(STR0).description(STR1).category(CATEGORY_CODE_COVERAGE).onQualifiers(Qualifiers.PROJECT).multiValues(true).deprecatedKey(OLD_COVERAGE_REPORT_PATHS_PROPERTY_KEY).build()"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "return ImmutableList.of(getPerson(name));", "OriginalCompleteAfter": "return Collections.singletonList(getPerson(name));", "Before": "ImmutableList.of(getPerson(name))", "After": "Collections.singletonList(getPerson(name))", "Project": "dropwizard", "Commit": "0d143d7bc35351a135f8dc82c5e6f78d1eb39268", "CompilationUnit": "io.dropwizard.testing.app.PersonResource", "LineNos": {"_1": 40, "_2": 41}, "Names": {"_1": "getPersonList", "_2": "getPersonList"}, "TemplateVariableToCodeBefore": {"v0": "getPerson(name)"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "getPerson(name)"}, "isRelevant": "Returns", "isSafe": true}, {"OriginalCompleteBefore": "people = ImmutableList.of(person)", "OriginalCompleteAfter": "people = Collections.singletonList(person)", "Before": "ImmutableList.of(person)", "After": "Collections.singletonList(person)", "Project": "dropwizard", "Commit": "0d143d7bc35351a135f8dc82c5e6f78d1eb39268", "CompilationUnit": "com.example.helloworld.resources.PeopleResourceTest", "LineNos": {"_1": 70, "_2": 70}, "Names": {"_1": "people", "_2": "people"}, "TemplateVariableToCodeBefore": {"v0": "person"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "person"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "list_l = ImmutableList.of(long.class)", "OriginalCompleteAfter": "list_l = Collections.singletonList(long.class)", "Before": "ImmutableList.of(long.class)", "After": "Collections.singletonList(long.class)", "Project": "BuildCraft", "Commit": "0e2356631b29dbcae92b2192002e19b48f605091", "CompilationUnit": "buildcraft.test.lib.expression.ExpressionTester", "LineNos": {"_1": 120, "_2": 118}, "Names": {"_1": "list_l", "_2": "list_l"}, "TemplateVariableToCodeBefore": {"v0": "long.class"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "long.class"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "list_d = ImmutableList.of(double.class)", "OriginalCompleteAfter": "list_d = Collections.singletonList(double.class)", "Before": "ImmutableList.of(double.class)", "After": "Collections.singletonList(double.class)", "Project": "BuildCraft", "Commit": "0e2356631b29dbcae92b2192002e19b48f605091", "CompilationUnit": "buildcraft.test.lib.expression.ExpressionTester", "LineNos": {"_1": 119, "_2": 117}, "Names": {"_1": "list_d", "_2": "list_d"}, "TemplateVariableToCodeBefore": {"v0": "double.class"}, "RelevantImports": ["java.util.Collections"], "TemplateVariableToCodeAfter": {"v0": "double.class"}, "isRelevant": "AssignedTo", "isSafe": true}]