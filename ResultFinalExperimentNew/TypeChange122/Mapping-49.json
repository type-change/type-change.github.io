[{"OriginalCompleteBefore": "SingleFileStoreConfigurationBuilder bld=new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented).location(tmpDirectory);", "OriginalCompleteAfter": "SingleFileStoreConfigurationBuilder bld=new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented).location(tmpDirectory.getAbsolutePath());", "Before": "new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented).location(tmpDirectory)", "After": "new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented).location(tmpDirectory.getAbsolutePath())", "Project": "infinispan", "Commit": "e3834f260f002e43c73f7a8bb0a62528291b619e", "CompilationUnit": "org.infinispan.persistence.support.AsyncStoreWithoutEvictionFunctionalTest", "LineNos": {"_1": 39, "_2": 41}, "Names": {"_1": "tmpDirectory", "_2": "tmpDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "tmpDirectory", "v0": "new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented)"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "tmpDirectory", "v0": "new ConfigurationBuilder().clustering().cacheMode(CacheMode.LOCAL).transaction().transactionMode(TransactionMode.NON_TRANSACTIONAL).persistence().passivation(false).addSingleFileStore().preload(false).purgeOnStartup(false).segmented(segmented)"}, "isRelevant": "Uses", "isSafe": true}]