[{"OriginalCompleteBefore": "return Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName)).toArray(String[]::new);", "OriginalCompleteAfter": "return Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName)).collect(Collectors.joining(STR0));", "Before": "Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName)).toArray(String[]::new)", "After": "Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName)).collect(Collectors.joining(STR0))", "Project": "geoserver", "Commit": "63e310fb50589038e2f762ea747b39ecc7c5eb2e", "CompilationUnit": "com.boundlessgeo.gsr.api.map.ExportMapController", "LineNos": {"_1": 120, "_2": 125}, "Names": {"_1": "translateLayersParam", "_2": "translateLayersParam"}, "TemplateVariableToCodeBefore": {"v0": "Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName))"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "Arrays.stream(layersSpecAndLayers[1].split(STR0)).map(layerName -> LayersAndTables.integerIdToGeoserverLayerName(catalog,layerName,workspaceName))"}, "isRelevant": "Returns", "isSafe": true}]