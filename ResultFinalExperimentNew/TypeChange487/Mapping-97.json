[{"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).contains(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).contains(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 458, "_2": 458}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).contains(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).contains(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 458, "_2": 458}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).contains(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).contains(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 430, "_2": 430}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).contains(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).contains(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 430, "_2": 430}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()),Charset.forName(STR1))).contains(STR2);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)),Charset.forName(STR1))).contains(STR2);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 409, "_2": 409}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).contains(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).contains(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 235, "_2": 235}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "assertThat(new String(Files.readAllBytes(new File(outputDirectory,STR0).toPath()))).doesNotContain(STR1);", "OriginalCompleteAfter": "assertThat(new String(Files.readAllBytes(outputDirectory.resolve(STR0)))).doesNotContain(STR1);", "Before": "new File(outputDirectory,STR0)", "After": "outputDirectory", "Project": "swagger2markup", "Commit": "3dae4dd155fbaba834e10b5177bf87b33840be98", "CompilationUnit": "io.github.robwin.swagger2markup.Swagger2MarkupConverterTest", "LineNos": {"_1": 215, "_2": 215}, "Names": {"_1": "outputDirectory", "_2": "outputDirectory"}, "TemplateVariableToCodeBefore": {"TCIVar": "outputDirectory"}, "RelevantImports": ["java.io.File"], "TemplateVariableToCodeAfter": {"TCIVar": "outputDirectory"}, "isRelevant": "Uses", "isSafe": false}]