[{"OriginalCompleteBefore": "warnDups = languagesOutDir.list() == null || languagesOutDir.list().length == 0", "OriginalCompleteAfter": "languagesNames = jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new))", "Before": "languagesOutDir.list() == null || languagesOutDir.list().length == 0", "After": "jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new))", "Project": "camel", "Commit": "41ed1d42641fd0246324dccfe56953833f66ba15", "CompilationUnit": "org.apache.camel.maven.packaging.PrepareCatalogMojo", "LineNos": {"_1": 660, "_2": 585}, "Names": {"_1": "warnDups", "_2": "languagesNames"}, "TemplateVariableToCodeBefore": {"xyz": "languagesOutDir.list() == null || languagesOutDir.list().length == 0"}, "RelevantImports": ["java.util.stream.Collectors"], "TemplateVariableToCodeAfter": {"xyz": "jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new))"}, "isRelevant": "AssignedTo", "isSafe": false}, {"OriginalCompleteBefore": "boolean warnDups=languagesOutDir.list() == null || languagesOutDir.list().length == 0;", "OriginalCompleteAfter": "Set<String> languagesNames=jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new));", "Before": "languagesOutDir.list() == null || languagesOutDir.list().length == 0", "After": "jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new))", "Project": "camel", "Commit": "41ed1d42641fd0246324dccfe56953833f66ba15", "CompilationUnit": "org.apache.camel.maven.packaging.PrepareCatalogMojo", "LineNos": {"_1": 660, "_2": 585}, "Names": {"_1": "warnDups", "_2": "languagesNames"}, "TemplateVariableToCodeBefore": {"xyz": "languagesOutDir.list() == null || languagesOutDir.list().length == 0"}, "RelevantImports": ["java.util.stream.Collectors"], "TemplateVariableToCodeAfter": {"xyz": "jsonFiles.stream().map(PrepareCatalogMojo::asComponentName).collect(Collectors.toCollection(TreeSet::new))"}, "isRelevant": "AssignedTo", "isSafe": false}]