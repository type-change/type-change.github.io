[{"OriginalCompleteBefore": "return (EnumDeclaration)getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst().orElse(null);", "OriginalCompleteAfter": "return getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst().map(t -> (EnumDeclaration)t);", "Before": "(EnumDeclaration)getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst().orElse(null)", "After": "getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst().map(t -> (EnumDeclaration)t)", "Project": "javaparser", "Commit": "1ff8db9b9d9fdd6c9655d9d37761a00e98ab6d04", "CompilationUnit": "com.github.javaparser.ast.CompilationUnit", "LineNos": {"_1": 413, "_2": 414}, "Names": {"_1": "getEnumByName", "_2": "getEnumByName"}, "TemplateVariableToCodeBefore": {"v0": "getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst()"}, "RelevantImports": ["com.github.javaparser.ast.body.EnumDeclaration"], "TemplateVariableToCodeAfter": {"v0": "getTypes().stream().filter(type -> type.getNameAsString().equals(enumName) && type instanceof EnumDeclaration).findFirst()"}, "isRelevant": "Returns", "isSafe": false}]