[{"OriginalCompleteBefore": "Assert.assertFalse(userNotVerified.get(0).isEmailVerified());", "OriginalCompleteAfter": "Assert.assertFalse(userNotVerified.get().isEmailVerified());", "Before": "userNotVerified.get(0)", "After": "userNotVerified.get()", "Project": "keycloak", "Commit": "73d0bb34c4d8a6826e538f2a81bef515732a59c9", "CompilationUnit": "org.keycloak.testsuite.federation.ldap.LDAPProvidersIntegrationTest", "LineNos": {"_1": 1150, "_2": 1149}, "Names": {"_1": "userNotVerified", "_2": "userNotVerified"}, "TemplateVariableToCodeBefore": {"TCIVar": "userNotVerified"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "userNotVerified"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Assert.assertTrue(userVerified.get(0).isEmailVerified());", "OriginalCompleteAfter": "Assert.assertTrue(userVerified.get().isEmailVerified());", "Before": "userVerified.get(0)", "After": "userVerified.get()", "Project": "keycloak", "Commit": "73d0bb34c4d8a6826e538f2a81bef515732a59c9", "CompilationUnit": "org.keycloak.testsuite.federation.ldap.LDAPProvidersIntegrationTest", "LineNos": {"_1": 1133, "_2": 1132}, "Names": {"_1": "userVerified", "_2": "userVerified"}, "TemplateVariableToCodeBefore": {"TCIVar": "userVerified"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "userVerified"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "CredentialModel model=existing.get(0);", "OriginalCompleteAfter": "CredentialModel model=existing.get();", "Before": "existing.get(0)", "After": "existing.get()", "Project": "keycloak", "Commit": "73d0bb34c4d8a6826e538f2a81bef515732a59c9", "CompilationUnit": "org.keycloak.testsuite.federation.PassThroughFederatedUserStorageProvider", "LineNos": {"_1": 94, "_2": 100}, "Names": {"_1": "existing", "_2": "existing"}, "TemplateVariableToCodeBefore": {"TCIVar": "existing"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "existing"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return existing.get(0).getSecretData().equals(STR0 + input.getChallengeResponse() + STR1);", "OriginalCompleteAfter": "return existing.get().getSecretData().equals(STR0 + input.getChallengeResponse() + STR1);", "Before": "existing.get(0)", "After": "existing.get()", "Project": "keycloak", "Commit": "73d0bb34c4d8a6826e538f2a81bef515732a59c9", "CompilationUnit": "org.keycloak.testsuite.federation.PassThroughFederatedUserStorageProvider", "LineNos": {"_1": 83, "_2": 86}, "Names": {"_1": "existing", "_2": "existing"}, "TemplateVariableToCodeBefore": {"TCIVar": "existing"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "existing"}, "isRelevant": "Uses", "isSafe": true}]