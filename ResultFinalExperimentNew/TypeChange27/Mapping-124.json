[{"OriginalCompleteBefore": "return ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName())).findFirst().orElse(null);", "OriginalCompleteAfter": "return ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName())).collect(Collectors.toList());", "Before": "ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName())).findFirst().orElse(null)", "After": "ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName())).collect(Collectors.toList())", "Project": "spring-framework", "Commit": "3393c10d790abfb0092edcce95519807d6f94568", "CompilationUnit": "org.springframework.http.HttpHeaders", "LineNos": {"_1": 485, "_2": 482}, "Names": {"_1": "getAcceptLanguageAsLocale", "_2": "getAcceptLanguageAsLocales"}, "TemplateVariableToCodeBefore": {"v0": "ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName()))"}, "RelevantImports": ["java.util.stream.Collectors"], "TemplateVariableToCodeAfter": {"v0": "ranges.stream().map(range -> Locale.forLanguageTag(range.getRange())).filter(locale -> StringUtils.hasText(locale.getDisplayName()))"}, "isRelevant": "Returns", "isSafe": true}]