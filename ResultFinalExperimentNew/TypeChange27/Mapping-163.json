[{"OriginalCompleteBefore": "content = FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "OriginalCompleteAfter": "lines = FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 134, "_2": 153}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "String content=FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "OriginalCompleteAfter": "List<String> lines=FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 134, "_2": 153}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "content = FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "OriginalCompleteAfter": "lines = FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 274, "_2": 316}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "String content=FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "OriginalCompleteAfter": "List<String> lines=FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 274, "_2": 316}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "content = FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "OriginalCompleteAfter": "lines = FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 149, "_2": 184}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}, {"OriginalCompleteBefore": "String content=FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "OriginalCompleteAfter": "List<String> lines=FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8);", "Before": "FileUtils.readFileToString(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "After": "FileUtils.readLines(writer.getFileStructure().analysisLog(),StandardCharsets.UTF_8)", "Project": "sonarqube", "Commit": "e4c0b858c7e6807801c6481d995ca11682c58fad", "CompilationUnit": "org.sonar.scanner.report.AnalysisContextReportPublisherTest", "LineNos": {"_1": 149, "_2": 184}, "Names": {"_1": "content", "_2": "lines"}, "TemplateVariableToCodeBefore": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "RelevantImports": ["org.apache.commons.io.FileUtils"], "TemplateVariableToCodeAfter": {"v0": "writer.getFileStructure().analysisLog()", "v1": "StandardCharsets.UTF_8"}, "isRelevant": "AssignedTo", "isSafe": true}]