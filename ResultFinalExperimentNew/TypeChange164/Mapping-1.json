[{"OriginalCompleteBefore": "builder.putAll(rootCellConfigOverrides.getForCell(entry.getValue()));", "OriginalCompleteAfter": "builder.putAll(rootCellConfigOverrides.getForCell(entry.getKey()));", "Before": "entry.getValue()", "After": "entry.getKey()", "Project": "buck", "Commit": "45399e05107301c4192cc5af268bc7ced6754763", "CompilationUnit": "com.facebook.buck.rules.Cell", "LineNos": {"_1": 229, "_2": 230}, "Names": {"_1": "entry", "_2": "entry"}, "TemplateVariableToCodeBefore": {"TCIVar": "entry"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "entry"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Data data=e.getValue();", "OriginalCompleteAfter": "Data data=e.getKey();", "Before": "e.getValue()", "After": "e.getKey()", "Project": "infinispan", "Commit": "dce499af65df0cbf12ede67d8f91475488c5f9c3", "CompilationUnit": "org.infinispan.util.concurrent.ConditionFuture", "LineNos": {"_1": 123, "_2": 123}, "Names": {"_1": "e", "_2": "e"}, "TemplateVariableToCodeBefore": {"TCIVar": "e"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "e"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "String name=CastFunctionResolver.TRY_CAST_PREFIX + function.getValue();", "OriginalCompleteAfter": "String name=CastFunctionResolver.TRY_CAST_PREFIX + function.getKey();", "Before": "function.getValue()", "After": "function.getKey()", "Project": "crate", "Commit": "a4dbfe3ab03aa82a55576d38476d86a5997a0ebc", "CompilationUnit": "io.crate.expression.scalar.cast.TryCastScalarFunction", "LineNos": {"_1": 45, "_2": 45}, "Names": {"_1": "function", "_2": "function"}, "TemplateVariableToCodeBefore": {"TCIVar": "function"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "function"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Set<Integer> normalKeySet=normalHostToKeySet.get(resolvedKeys.getValue());", "OriginalCompleteAfter": "Set<Integer> normalKeySet=normalHostToKeySet.get(resolvedKeys.getKey());", "Before": "resolvedKeys.getValue()", "After": "resolvedKeys.getKey()", "Project": "rest.li", "Commit": "896facedc21d40d9d1469608b74010d82514a63e", "CompilationUnit": "com.linkedin.d2.balancer.util.hashing.RingBasedURIMapperTest", "LineNos": {"_1": 292, "_2": 292}, "Names": {"_1": "resolvedKeys", "_2": "resolvedKeys"}, "TemplateVariableToCodeBefore": {"TCIVar": "resolvedKeys"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "resolvedKeys"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Assert.assertTrue(normalHostToKeySet.containsKey(resolvedKeys.getValue()));", "OriginalCompleteAfter": "Assert.assertTrue(normalHostToKeySet.containsKey(resolvedKeys.getKey()));", "Before": "resolvedKeys.getValue()", "After": "resolvedKeys.getKey()", "Project": "rest.li", "Commit": "896facedc21d40d9d1469608b74010d82514a63e", "CompilationUnit": "com.linkedin.d2.balancer.util.hashing.RingBasedURIMapperTest", "LineNos": {"_1": 292, "_2": 292}, "Names": {"_1": "resolvedKeys", "_2": "resolvedKeys"}, "TemplateVariableToCodeBefore": {"TCIVar": "resolvedKeys"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "resolvedKeys"}, "isRelevant": "Uses", "isSafe": true}]