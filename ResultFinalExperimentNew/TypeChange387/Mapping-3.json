[{"OriginalCompleteBefore": "if(prevTokenIsDas && (DAS_VERB_EXCEPTIONS.contains(nextToken.getToken()) || isFollowedByRelativeOrSubordinateClause(i,tokens)) || (i > 1 && hasPartialTag(tokens[i - 2],STR0,STR1)))", "OriginalCompleteAfter": "if(prevTokenIsDas && (StringUtils.equalsAny(nextToken.getToken(),DAS_VERB_EXCEPTIONS) || isFollowedByRelativeOrSubordinateClause(i,tokens)) || (i > 1 && hasPartialTag(tokens[i - 2],STR0,STR1)))", "Before": "DAS_VERB_EXCEPTIONS.contains(nextToken.getToken())", "After": "StringUtils.equalsAny(nextToken.getToken(),DAS_VERB_EXCEPTIONS)", "Project": "languagetool", "Commit": "d1942604ff515884452ecf1d88614624ccc5c2d6", "CompilationUnit": "org.languagetool.rules.de.CaseRule", "LineNos": {"_1": 390, "_2": 386}, "Names": {"_1": "DAS_VERB_EXCEPTIONS", "_2": "DAS_VERB_EXCEPTIONS"}, "TemplateVariableToCodeBefore": {"TCIVar": "DAS_VERB_EXCEPTIONS", "v1": "nextToken.getToken()"}, "RelevantImports": ["org.apache.commons.lang3.StringUtils"], "TemplateVariableToCodeAfter": {"TCIVar": "DAS_VERB_EXCEPTIONS", "v1": "nextToken.getToken()"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "boolean isFollowedByPossessiveIndicator=nextReadings != null && POSSESSIVE_INDICATORS.contains(nextReadings.getToken());", "OriginalCompleteAfter": "boolean isFollowedByPossessiveIndicator=nextReadings != null && StringUtils.equalsAny(nextReadings.getToken(),POSSESSIVE_INDICATORS);", "Before": "POSSESSIVE_INDICATORS.contains(nextReadings.getToken())", "After": "StringUtils.equalsAny(nextReadings.getToken(),POSSESSIVE_INDICATORS)", "Project": "languagetool", "Commit": "d1942604ff515884452ecf1d88614624ccc5c2d6", "CompilationUnit": "org.languagetool.rules.de.CaseRule", "LineNos": {"_1": 387, "_2": 384}, "Names": {"_1": "POSSESSIVE_INDICATORS", "_2": "POSSESSIVE_INDICATORS"}, "TemplateVariableToCodeBefore": {"TCIVar": "POSSESSIVE_INDICATORS", "v1": "nextReadings.getToken()"}, "RelevantImports": ["org.apache.commons.lang3.StringUtils"], "TemplateVariableToCodeAfter": {"TCIVar": "POSSESSIVE_INDICATORS", "v1": "nextReadings.getToken()"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return STR0.equals(tokens[i + 1].getToken()) && (INTERROGATIVE_PARTICLES.contains(tokens[i + 2].getToken()) || tokens[i + 2].hasPosTag(STR1));", "OriginalCompleteAfter": "return STR0.equals(tokens[i + 1].getToken()) && (StringUtils.equalsAny(tokens[i + 2].getToken(),INTERROGATIVE_PARTICLES) || tokens[i + 2].hasPosTag(STR1));", "Before": "INTERROGATIVE_PARTICLES.contains(tokens[i + 2].getToken())", "After": "StringUtils.equalsAny(tokens[i + 2].getToken(),INTERROGATIVE_PARTICLES)", "Project": "languagetool", "Commit": "d1942604ff515884452ecf1d88614624ccc5c2d6", "CompilationUnit": "org.languagetool.rules.de.CaseRule", "LineNos": {"_1": 384, "_2": 382}, "Names": {"_1": "INTERROGATIVE_PARTICLES", "_2": "INTERROGATIVE_PARTICLES"}, "TemplateVariableToCodeBefore": {"TCIVar": "INTERROGATIVE_PARTICLES", "v1": "tokens[i + 2].getToken()"}, "RelevantImports": ["org.apache.commons.lang3.StringUtils"], "TemplateVariableToCodeAfter": {"TCIVar": "INTERROGATIVE_PARTICLES", "v1": "tokens[i + 2].getToken()"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "boolean isUndefQuantifier=prevToken != null && UNDEFINED_QUANTIFIERS.contains(prevToken.getToken().toLowerCase());", "OriginalCompleteAfter": "boolean isUndefQuantifier=prevToken != null && StringUtils.equalsAny(prevToken.getToken().toLowerCase(),UNDEFINED_QUANTIFIERS);", "Before": "UNDEFINED_QUANTIFIERS.contains(prevToken.getToken().toLowerCase())", "After": "StringUtils.equalsAny(prevToken.getToken().toLowerCase(),UNDEFINED_QUANTIFIERS)", "Project": "languagetool", "Commit": "d1942604ff515884452ecf1d88614624ccc5c2d6", "CompilationUnit": "org.languagetool.rules.de.CaseRule", "LineNos": {"_1": 381, "_2": 380}, "Names": {"_1": "UNDEFINED_QUANTIFIERS", "_2": "UNDEFINED_QUANTIFIERS"}, "TemplateVariableToCodeBefore": {"TCIVar": "UNDEFINED_QUANTIFIERS", "v1": "prevToken.getToken().toLowerCase()"}, "RelevantImports": ["org.apache.commons.lang3.StringUtils"], "TemplateVariableToCodeAfter": {"TCIVar": "UNDEFINED_QUANTIFIERS", "v1": "prevToken.getToken().toLowerCase()"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(i > 1 && sentenceStartExceptions.contains(tokens[i - 2].getToken()))", "OriginalCompleteAfter": "if(i > 1 && StringUtils.equalsAny(tokens[i - 2].getToken(),sentenceStartExceptions))", "Before": "sentenceStartExceptions.contains(tokens[i - 2].getToken())", "After": "StringUtils.equalsAny(tokens[i - 2].getToken(),sentenceStartExceptions)", "Project": "languagetool", "Commit": "d1942604ff515884452ecf1d88614624ccc5c2d6", "CompilationUnit": "org.languagetool.rules.de.CaseRule", "LineNos": {"_1": 378, "_2": 378}, "Names": {"_1": "sentenceStartExceptions", "_2": "sentenceStartExceptions"}, "TemplateVariableToCodeBefore": {"TCIVar": "sentenceStartExceptions", "v1": "tokens[i - 2].getToken()"}, "RelevantImports": ["org.apache.commons.lang3.StringUtils"], "TemplateVariableToCodeAfter": {"TCIVar": "sentenceStartExceptions", "v1": "tokens[i - 2].getToken()"}, "isRelevant": "Uses", "isSafe": true}]