[{"OriginalCompleteBefore": "mDb.put(mEdgesColumn,mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId));", "OriginalCompleteAfter": "db().put(mEdgesColumn.get(),mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId));", "Before": "mDb.put(mEdgesColumn,mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId))", "After": "db().put(mEdgesColumn.get(),mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId))", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 74, "_2": 71}, "Names": {"_1": "mEdgesColumn", "_2": "mEdgesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mEdgesColumn", "v0": "mDisableWAL", "v1": "RocksUtils.toByteArray(parentId,childName)", "v2": "Longs.toByteArray(childId)"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mEdgesColumn", "v0": "mDisableWAL", "v1": "RocksUtils.toByteArray(parentId,childName)", "v2": "Longs.toByteArray(childId)"}, "isRelevant": "Uses", "isSafe": false}, {"OriginalCompleteBefore": "mDb.put(mInodesColumn,mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray());", "OriginalCompleteAfter": "db().put(mInodesColumn.get(),mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray());", "Before": "mDb.put(mInodesColumn,mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray())", "After": "db().put(mInodesColumn.get(),mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray())", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 73, "_2": 70}, "Names": {"_1": "mInodesColumn", "_2": "mInodesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mInodesColumn", "v0": "mDisableWAL", "v1": "Longs.toByteArray(inode.getId())", "v2": "inode.toProto().toByteArray()"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mInodesColumn", "v0": "mDisableWAL", "v1": "Longs.toByteArray(inode.getId())", "v2": "inode.toProto().toByteArray()"}, "isRelevant": "Uses", "isSafe": false}]