[{"OriginalCompleteBefore": "return Collections.unmodifiableSet(propertyKeysToInclude);", "OriginalCompleteAfter": "return Collections.unmodifiableSet(propertyKeysToInclude.get());", "Before": "propertyKeysToInclude", "After": "propertyKeysToInclude.get()", "Project": "neo4j", "Commit": "5513bae7e2bd44220d28a8af2a44ea1bd88347e7", "CompilationUnit": "org.neo4j.kernel.impl.api.AutoIndexing.AutoIndexOperations", "LineNos": {"_1": 168, "_2": 138}, "Names": {"_1": "propertyKeysToInclude", "_2": "propertyKeysToInclude"}, "TemplateVariableToCodeBefore": {"TCIVar": "propertyKeysToInclude"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "propertyKeysToInclude"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(propertyKeysToInclude.contains(name))", "OriginalCompleteAfter": "if(propertyKeysToInclude.get().contains(name))", "Before": "propertyKeysToInclude", "After": "propertyKeysToInclude.get()", "Project": "neo4j", "Commit": "5513bae7e2bd44220d28a8af2a44ea1bd88347e7", "CompilationUnit": "org.neo4j.kernel.impl.api.AutoIndexing.AutoIndexOperations", "LineNos": {"_1": 168, "_2": 138}, "Names": {"_1": "propertyKeysToInclude", "_2": "propertyKeysToInclude"}, "TemplateVariableToCodeBefore": {"TCIVar": "propertyKeysToInclude"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "propertyKeysToInclude"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(propertyKeysToInclude.contains(name))", "OriginalCompleteAfter": "if(propertyKeysToInclude.get().contains(name))", "Before": "propertyKeysToInclude", "After": "propertyKeysToInclude.get()", "Project": "neo4j", "Commit": "5513bae7e2bd44220d28a8af2a44ea1bd88347e7", "CompilationUnit": "org.neo4j.kernel.impl.api.AutoIndexing.AutoIndexOperations", "LineNos": {"_1": 168, "_2": 138}, "Names": {"_1": "propertyKeysToInclude", "_2": "propertyKeysToInclude"}, "TemplateVariableToCodeBefore": {"TCIVar": "propertyKeysToInclude"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "propertyKeysToInclude"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(propertyKeysToInclude.contains(name))", "OriginalCompleteAfter": "if(propertyKeysToInclude.get().contains(name))", "Before": "propertyKeysToInclude", "After": "propertyKeysToInclude.get()", "Project": "neo4j", "Commit": "5513bae7e2bd44220d28a8af2a44ea1bd88347e7", "CompilationUnit": "org.neo4j.kernel.impl.api.AutoIndexing.AutoIndexOperations", "LineNos": {"_1": 168, "_2": 138}, "Names": {"_1": "propertyKeysToInclude", "_2": "propertyKeysToInclude"}, "TemplateVariableToCodeBefore": {"TCIVar": "propertyKeysToInclude"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "propertyKeysToInclude"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "failureCause.printStackTrace(new PrintWriter(writer));", "OriginalCompleteAfter": "failureCause.get().printStackTrace(new PrintWriter(writer));", "Before": "failureCause", "After": "failureCause.get()", "Project": "elasticsearch", "Commit": "c4569432d1a47a481c2c56dabb56eb14541850d2", "CompilationUnit": "org.elasticsearch.shield.transport.netty.HandshakeWaitingHandlerTests", "LineNos": {"_1": 67, "_2": 67}, "Names": {"_1": "failureCause", "_2": "failureCause"}, "TemplateVariableToCodeBefore": {"TCIVar": "failureCause"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "failureCause"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(failureCause,anyOf(instanceOf(SSLException.class),instanceOf(AssertionError.class)));", "OriginalCompleteAfter": "assertThat(failureCause.get(),anyOf(instanceOf(SSLException.class),instanceOf(AssertionError.class)));", "Before": "failureCause", "After": "failureCause.get()", "Project": "elasticsearch", "Commit": "c4569432d1a47a481c2c56dabb56eb14541850d2", "CompilationUnit": "org.elasticsearch.shield.transport.netty.HandshakeWaitingHandlerTests", "LineNos": {"_1": 67, "_2": 67}, "Names": {"_1": "failureCause", "_2": "failureCause"}, "TemplateVariableToCodeBefore": {"TCIVar": "failureCause"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "failureCause"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "shardIterator=checkpoint.getShardIterator(kinesis);", "OriginalCompleteAfter": "shardIterator=checkpoint.get().getShardIterator(kinesis);", "Before": "checkpoint", "After": "checkpoint.get()", "Project": "beam", "Commit": "ec3944659d16d696bcd73589aa035dbaa9aede2c", "CompilationUnit": "org.apache.beam.sdk.io.kinesis.ShardRecordsIterator", "LineNos": {"_1": 41, "_2": 45}, "Names": {"_1": "checkpoint", "_2": "checkpoint"}, "TemplateVariableToCodeBefore": {"TCIVar": "checkpoint"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "checkpoint"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return state.hashCode();", "OriginalCompleteAfter": "return state.get().hashCode();", "Before": "state", "After": "state.get()", "Project": "sonarqube", "Commit": "ef72cd98a1dc1044e59021e3999857309902d718", "CompilationUnit": "org.sonar.process.Lifecycle", "LineNos": {"_1": 50, "_2": 51}, "Names": {"_1": "state", "_2": "state"}, "TemplateVariableToCodeBefore": {"TCIVar": "state"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "state"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "failureCause.printStackTrace(new PrintWriter(writer));", "OriginalCompleteAfter": "failureCause.get().printStackTrace(new PrintWriter(writer));", "Before": "failureCause", "After": "failureCause.get()", "Project": "elasticsearch", "Commit": "82a595e6968bb26fed1518d391753eefb0a9156b", "CompilationUnit": "org.elasticsearch.shield.transport.netty.HandshakeWaitingHandlerTests", "LineNos": {"_1": 67, "_2": 67}, "Names": {"_1": "failureCause", "_2": "failureCause"}, "TemplateVariableToCodeBefore": {"TCIVar": "failureCause"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "failureCause"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(failureCause,anyOf(instanceOf(SSLException.class),instanceOf(AssertionError.class)));", "OriginalCompleteAfter": "assertThat(failureCause.get(),anyOf(instanceOf(SSLException.class),instanceOf(AssertionError.class)));", "Before": "failureCause", "After": "failureCause.get()", "Project": "elasticsearch", "Commit": "82a595e6968bb26fed1518d391753eefb0a9156b", "CompilationUnit": "org.elasticsearch.shield.transport.netty.HandshakeWaitingHandlerTests", "LineNos": {"_1": 67, "_2": 67}, "Names": {"_1": "failureCause", "_2": "failureCause"}, "TemplateVariableToCodeBefore": {"TCIVar": "failureCause"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "failureCause"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "String lookupAddress=loadManager.getLeastLoaded(serviceUnit).getResourceId();", "OriginalCompleteAfter": "String lookupAddress=loadManager.get().getLeastLoaded(serviceUnit).getResourceId();", "Before": "loadManager", "After": "loadManager.get()", "Project": "pulsar", "Commit": "1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b", "CompilationUnit": "com.yahoo.pulsar.broker.namespace.NamespaceService", "LineNos": {"_1": 96, "_2": 98}, "Names": {"_1": "loadManager", "_2": "loadManager"}, "TemplateVariableToCodeBefore": {"TCIVar": "loadManager"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "loadManager"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "loadManager.doLoadShedding();", "OriginalCompleteAfter": "loadManager.get().doLoadShedding();", "Before": "loadManager", "After": "loadManager.get()", "Project": "pulsar", "Commit": "1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b", "CompilationUnit": "com.yahoo.pulsar.broker.loadbalance.LoadSheddingTask", "LineNos": {"_1": 28, "_2": 29}, "Names": {"_1": "loadManager", "_2": "loadManager"}, "TemplateVariableToCodeBefore": {"TCIVar": "loadManager"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "loadManager"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "loadManager.writeLoadReportOnZookeeper();", "OriginalCompleteAfter": "loadManager.get().writeLoadReportOnZookeeper();", "Before": "loadManager", "After": "loadManager.get()", "Project": "pulsar", "Commit": "1e02afb29fb3016f8a2ea8851c3b0fa56b4be85b", "CompilationUnit": "com.yahoo.pulsar.broker.loadbalance.LoadReportUpdaterTask", "LineNos": {"_1": 28, "_2": 29}, "Names": {"_1": "loadManager", "_2": "loadManager"}, "TemplateVariableToCodeBefore": {"TCIVar": "loadManager"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "loadManager"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return delegate.hashCode();", "OriginalCompleteAfter": "return delegate.get().hashCode();", "Before": "delegate", "After": "delegate.get()", "Project": "geode", "Commit": "a9d346f6581cd2861a9f9870574a441c9c439d36", "CompilationUnit": "org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.DelegatingScheduledFuture", "LineNos": {"_1": 252, "_2": 255}, "Names": {"_1": "delegate", "_2": "delegate"}, "TemplateVariableToCodeBefore": {"TCIVar": "delegate"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "delegate"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return delegate.equals(o);", "OriginalCompleteAfter": "return delegate.get().equals(o);", "Before": "delegate", "After": "delegate.get()", "Project": "geode", "Commit": "a9d346f6581cd2861a9f9870574a441c9c439d36", "CompilationUnit": "org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.DelegatingScheduledFuture", "LineNos": {"_1": 252, "_2": 255}, "Names": {"_1": "delegate", "_2": "delegate"}, "TemplateVariableToCodeBefore": {"TCIVar": "delegate"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "delegate"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return delegate.compareTo(o);", "OriginalCompleteAfter": "return delegate.get().compareTo(o);", "Before": "delegate", "After": "delegate.get()", "Project": "geode", "Commit": "a9d346f6581cd2861a9f9870574a441c9c439d36", "CompilationUnit": "org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.DelegatingScheduledFuture", "LineNos": {"_1": 252, "_2": 255}, "Names": {"_1": "delegate", "_2": "delegate"}, "TemplateVariableToCodeBefore": {"TCIVar": "delegate"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "delegate"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return delegate.getDelay(unit);", "OriginalCompleteAfter": "return delegate.get().getDelay(unit);", "Before": "delegate", "After": "delegate.get()", "Project": "geode", "Commit": "a9d346f6581cd2861a9f9870574a441c9c439d36", "CompilationUnit": "org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.DelegatingScheduledFuture", "LineNos": {"_1": 252, "_2": 255}, "Names": {"_1": "delegate", "_2": "delegate"}, "TemplateVariableToCodeBefore": {"TCIVar": "delegate"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "delegate"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "delegate.cancel(true);", "OriginalCompleteAfter": "delegate.get().cancel(true);", "Before": "delegate", "After": "delegate.get()", "Project": "geode", "Commit": "a9d346f6581cd2861a9f9870574a441c9c439d36", "CompilationUnit": "org.apache.geode.internal.ScheduledThreadPoolExecutorWithKeepAlive.DelegatingScheduledFuture", "LineNos": {"_1": 252, "_2": 255}, "Names": {"_1": "delegate", "_2": "delegate"}, "TemplateVariableToCodeBefore": {"TCIVar": "delegate"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "delegate"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "_exitSynchronizer.countDown();", "OriginalCompleteAfter": "_exitSynchronizer.get().countDown();", "Before": "_exitSynchronizer", "After": "_exitSynchronizer.get()", "Project": "jetty.project", "Commit": "d926f04217a9314fa9e2513251382b4cab78217f", "CompilationUnit": "org.eclipse.jetty.server.session.TestContextScopeListener", "LineNos": {"_1": 29, "_2": 30}, "Names": {"_1": "_exitSynchronizer", "_2": "_exitSynchronizer"}, "TemplateVariableToCodeBefore": {"TCIVar": "_exitSynchronizer"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "_exitSynchronizer"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assert !content.hasRemaining();", "OriginalCompleteAfter": "assert !content.get().hasRemaining();", "Before": "content", "After": "content.get()", "Project": "cryptomator", "Commit": "edf92adfecb5fd6444cdf173c91c4c9cf60d0324", "CompilationUnit": "org.cryptomator.filesystem.inmem.InMemoryFile", "LineNos": {"_1": 33, "_2": 34}, "Names": {"_1": "content", "_2": "content"}, "TemplateVariableToCodeBefore": {"TCIVar": "content"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "content"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "privateSession.evaluate(msg,true);", "OriginalCompleteAfter": "privateSession.get().evaluate(msg,true);", "Before": "privateSession", "After": "privateSession.get()", "Project": "graylog2-server", "Commit": "e6b859cf0565ce74fd535bfee9f452e0a1817e53", "CompilationUnit": "org.graylog2.filters.RulesFilter", "LineNos": {"_1": 42, "_2": 43}, "Names": {"_1": "privateSession", "_2": "privateSession"}, "TemplateVariableToCodeBefore": {"TCIVar": "privateSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "privateSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "fragmentResultCacheContext.get().getFragmentResultCacheManager().put(fragmentResultCacheContext.get().getHashedCanonicalPlanFragment(),split.get(),outputPages);", "OriginalCompleteAfter": "fragmentResultCacheContext.get().get().getFragmentResultCacheManager().put(fragmentResultCacheContext.get().get().getHashedCanonicalPlanFragment(),split.get(),outputPages);", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "fragmentResultCacheContext.get().getFragmentResultCacheManager().put(fragmentResultCacheContext.get().getHashedCanonicalPlanFragment(),split.get(),outputPages);", "OriginalCompleteAfter": "fragmentResultCacheContext.get().get().getFragmentResultCacheManager().put(fragmentResultCacheContext.get().get().getHashedCanonicalPlanFragment(),split.get(),outputPages);", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "checkState(fragmentResultCacheContext.isPresent());", "OriginalCompleteAfter": "checkState(fragmentResultCacheContext.get().isPresent());", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return fragmentResultCacheContext.isPresent() && split.get() != null && split.get().getConnectorSplit().getNodeSelectionStrategy() != NO_PREFERENCE;", "OriginalCompleteAfter": "return fragmentResultCacheContext.get().isPresent() && split.get() != null && split.get().getConnectorSplit().getNodeSelectionStrategy() != NO_PREFERENCE;", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(fragmentResultCacheContext.isPresent() && !(split.getConnectorSplit() instanceof RemoteSplit))", "OriginalCompleteAfter": "if(fragmentResultCacheContext.get().isPresent() && !(split.getConnectorSplit() instanceof RemoteSplit))", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "this.cachedResult.set(fragmentResultCacheContext.get().getFragmentResultCacheManager().get(fragmentResultCacheContext.get().getHashedCanonicalPlanFragment(),split));", "OriginalCompleteAfter": "this.cachedResult.set(fragmentResultCacheContext.get().get().getFragmentResultCacheManager().get(fragmentResultCacheContext.get().get().getHashedCanonicalPlanFragment(),split));", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "this.cachedResult.set(fragmentResultCacheContext.get().getFragmentResultCacheManager().get(fragmentResultCacheContext.get().getHashedCanonicalPlanFragment(),split));", "OriginalCompleteAfter": "this.cachedResult.set(fragmentResultCacheContext.get().get().getFragmentResultCacheManager().get(fragmentResultCacheContext.get().get().getHashedCanonicalPlanFragment(),split));", "Before": "fragmentResultCacheContext", "After": "fragmentResultCacheContext.get()", "Project": "presto", "Commit": "8974bf2508711d7683cd1ad21d76e76319edfd89", "CompilationUnit": "com.facebook.presto.operator.Driver", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "fragmentResultCacheContext", "_2": "fragmentResultCacheContext"}, "TemplateVariableToCodeBefore": {"TCIVar": "fragmentResultCacheContext"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fragmentResultCacheContext"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Preconditions.checkNotNull(lastBuild);", "OriginalCompleteAfter": "return Preconditions.checkNotNull(lastBuild.get());", "Before": "lastBuild", "After": "lastBuild.get()", "Project": "buck", "Commit": "1ddcf787f7b97d13c9322c982161e0b5a402d00b", "CompilationUnit": "com.facebook.buck.cli.BuildCommand", "LineNos": {"_1": 341, "_2": 339}, "Names": {"_1": "lastBuild", "_2": "lastBuild"}, "TemplateVariableToCodeBefore": {"TCIVar": "lastBuild"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "lastBuild"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "managementTask.run();", "OriginalCompleteAfter": "managementTask.get().run();", "Before": "managementTask", "After": "managementTask.get()", "Project": "geode", "Commit": "42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7", "CompilationUnit": "org.apache.geode.management.internal.LocalManager", "LineNos": {"_1": 64, "_2": 66}, "Names": {"_1": "managementTask", "_2": "managementTask"}, "TemplateVariableToCodeBefore": {"TCIVar": "managementTask"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "managementTask"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "managementTask.run();", "OriginalCompleteAfter": "managementTask.get().run();", "Before": "managementTask", "After": "managementTask.get()", "Project": "geode", "Commit": "42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7", "CompilationUnit": "org.apache.geode.management.internal.LocalManager", "LineNos": {"_1": 64, "_2": 66}, "Names": {"_1": "managementTask", "_2": "managementTask"}, "TemplateVariableToCodeBefore": {"TCIVar": "managementTask"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "managementTask"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "List<Future<InternalDistributedMember>> futureTaskList=executorService.invokeAll(giiTaskList);", "OriginalCompleteAfter": "List<Future<InternalDistributedMember>> futureTaskList=executorService.get().invokeAll(giiTaskList);", "Before": "executorService", "After": "executorService.get()", "Project": "geode", "Commit": "42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7", "CompilationUnit": "org.apache.geode.management.internal.FederatingManager", "LineNos": {"_1": 82, "_2": 77}, "Names": {"_1": "executorService", "_2": "executorService"}, "TemplateVariableToCodeBefore": {"TCIVar": "executorService"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "executorService"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "executorService.execute(task);", "OriginalCompleteAfter": "executorService.get().execute(task);", "Before": "executorService", "After": "executorService.get()", "Project": "geode", "Commit": "42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7", "CompilationUnit": "org.apache.geode.management.internal.FederatingManager", "LineNos": {"_1": 82, "_2": 77}, "Names": {"_1": "executorService", "_2": "executorService"}, "TemplateVariableToCodeBefore": {"TCIVar": "executorService"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "executorService"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "executorService.shutdownNow();", "OriginalCompleteAfter": "executorService.get().shutdownNow();", "Before": "executorService", "After": "executorService.get()", "Project": "geode", "Commit": "42726bd99c9ebb57ec5d3e987d47ecae9f4ea3a7", "CompilationUnit": "org.apache.geode.management.internal.FederatingManager", "LineNos": {"_1": 82, "_2": 77}, "Names": {"_1": "executorService", "_2": "executorService"}, "TemplateVariableToCodeBefore": {"TCIVar": "executorService"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "executorService"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "ExecutingQuery executingQuery=new ExecutingQuery(queryId,clientConnection,statement.username(),queryText,queryParameters,statement.getTransaction().getMetaData(),() -> statement.locks().activeLockCount(),statement.getPageCursorTracer(),threadId,threadName,clock,cpuClock,heapAllocation);", "OriginalCompleteAfter": "ExecutingQuery executingQuery=new ExecutingQuery(queryId,clientConnection,statement.username(),queryText,queryParameters,statement.getTransaction().getMetaData(),() -> statement.locks().activeLockCount(),statement.getPageCursorTracer(),threadId,threadName,clock,cpuClockRef.get(),heapAllocationRef.get());", "Before": "heapAllocation", "After": "heapAllocation.get()", "Project": "neo4j", "Commit": "b0564802414028e71c8034da72774b1934cf1a7c", "CompilationUnit": "org.neo4j.kernel.impl.api.StackingQueryRegistrationOperations", "LineNos": {"_1": 38, "_2": 39}, "Names": {"_1": "heapAllocation", "_2": "heapAllocationRef"}, "TemplateVariableToCodeBefore": {"TCIVar": "heapAllocation"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "heapAllocation"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "ExecutingQuery executingQuery=new ExecutingQuery(queryId,clientConnection,statement.username(),queryText,queryParameters,statement.getTransaction().getMetaData(),() -> statement.locks().activeLockCount(),statement.getPageCursorTracer(),threadId,threadName,clock,cpuClock,heapAllocation);", "OriginalCompleteAfter": "ExecutingQuery executingQuery=new ExecutingQuery(queryId,clientConnection,statement.username(),queryText,queryParameters,statement.getTransaction().getMetaData(),() -> statement.locks().activeLockCount(),statement.getPageCursorTracer(),threadId,threadName,clock,cpuClockRef.get(),heapAllocationRef.get());", "Before": "cpuClock", "After": "cpuClock.get()", "Project": "neo4j", "Commit": "b0564802414028e71c8034da72774b1934cf1a7c", "CompilationUnit": "org.neo4j.kernel.impl.api.StackingQueryRegistrationOperations", "LineNos": {"_1": 37, "_2": 38}, "Names": {"_1": "cpuClock", "_2": "cpuClockRef"}, "TemplateVariableToCodeBefore": {"TCIVar": "cpuClock"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "cpuClock"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(pubsubClient.isEOF() && notYetRead.isEmpty())", "OriginalCompleteAfter": "if(pubsubClient.get().isEOF() && notYetRead.isEmpty())", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "ackTimeoutMs=pubsubClient.ackDeadlineSeconds(subscription) * 1000;", "OriginalCompleteAfter": "ackTimeoutMs=pubsubClient.get().ackDeadlineSeconds(subscription) * 1000;", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Collection<PubsubClient.IncomingMessage> receivedMessages=pubsubClient.pull(requestTimeMsSinceEpoch,subscription,PULL_BATCH_SIZE,true);", "OriginalCompleteAfter": "Collection<PubsubClient.IncomingMessage> receivedMessages=pubsubClient.get().pull(requestTimeMsSinceEpoch,subscription,PULL_BATCH_SIZE,true);", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "pubsubClient.modifyAckDeadline(subscription,ackIds,extensionSec);", "OriginalCompleteAfter": "pubsubClient.get().modifyAckDeadline(subscription,ackIds,extensionSec);", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "pubsubClient.modifyAckDeadline(subscription,ackIds,0);", "OriginalCompleteAfter": "pubsubClient.get().modifyAckDeadline(subscription,ackIds,0);", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "pubsubClient.acknowledge(subscription,ackIds);", "OriginalCompleteAfter": "pubsubClient.get().acknowledge(subscription,ackIds);", "Before": "pubsubClient", "After": "pubsubClient.get()", "Project": "beam", "Commit": "9c6c32bb11ef80c3cbb744e23e4b8c312592a3f7", "CompilationUnit": "org.apache.beam.sdk.io.PubsubUnboundedSource.PubsubReader", "LineNos": {"_1": 404, "_2": 407}, "Names": {"_1": "pubsubClient", "_2": "pubsubClient"}, "TemplateVariableToCodeBefore": {"TCIVar": "pubsubClient"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "pubsubClient"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "complete.execute();", "OriginalCompleteAfter": "complete.get().execute();", "Before": "complete", "After": "complete.get()", "Project": "ratpack", "Commit": "6de4240955da151dfb6e1973654cd02ca99ebcff", "CompilationUnit": "ratpack.exec.internal.DefaultExecution.MultiEventExecStream", "LineNos": {"_1": 496, "_2": 538}, "Names": {"_1": "complete", "_2": "complete"}, "TemplateVariableToCodeBefore": {"TCIVar": "complete"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "complete"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "List<ConfigChange> configChanges=calcPropertyChanges(m_configProperties,newConfigProperties);", "OriginalCompleteAfter": "List<ConfigChange> configChanges=calcPropertyChanges(m_configProperties.get(),newConfigProperties);", "Before": "m_configProperties", "After": "m_configProperties.get()", "Project": "apollo", "Commit": "c6b4dd501b5b7f6413270a3c1ea56bebef54e2eb", "CompilationUnit": "com.ctrip.apollo.internals.DefaultConfig", "LineNos": {"_1": 28, "_2": 29}, "Names": {"_1": "m_configProperties", "_2": "m_configProperties"}, "TemplateVariableToCodeBefore": {"TCIVar": "m_configProperties"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "m_configProperties"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(newProperties.equals(m_configProperties))", "OriginalCompleteAfter": "if(newProperties.equals(m_configProperties.get()))", "Before": "m_configProperties", "After": "m_configProperties.get()", "Project": "apollo", "Commit": "c6b4dd501b5b7f6413270a3c1ea56bebef54e2eb", "CompilationUnit": "com.ctrip.apollo.internals.DefaultConfig", "LineNos": {"_1": 28, "_2": 29}, "Names": {"_1": "m_configProperties", "_2": "m_configProperties"}, "TemplateVariableToCodeBefore": {"TCIVar": "m_configProperties"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "m_configProperties"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "value=m_configProperties.getProperty(key);", "OriginalCompleteAfter": "value=m_configProperties.get().getProperty(key);", "Before": "m_configProperties", "After": "m_configProperties.get()", "Project": "apollo", "Commit": "c6b4dd501b5b7f6413270a3c1ea56bebef54e2eb", "CompilationUnit": "com.ctrip.apollo.internals.DefaultConfig", "LineNos": {"_1": 28, "_2": 29}, "Names": {"_1": "m_configProperties", "_2": "m_configProperties"}, "TemplateVariableToCodeBefore": {"TCIVar": "m_configProperties"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "m_configProperties"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return buildStageInfo(plan,stageExecutions);", "OriginalCompleteAfter": "return buildStageInfo(plan.get(),stageExecutions);", "Before": "plan", "After": "plan.get()", "Project": "presto", "Commit": "0890b3dc4bb18e1e6567fe8e2ca82a81dcd3a9c0", "CompilationUnit": "com.facebook.presto.execution.scheduler.SqlQueryScheduler", "LineNos": {"_1": 110, "_2": 125}, "Names": {"_1": "plan", "_2": "plan"}, "TemplateVariableToCodeBefore": {"TCIVar": "plan"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "plan"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return buildStageInfo(plan,stageInfos);", "OriginalCompleteAfter": "return buildStageInfo(plan.get(),stageInfos);", "Before": "plan", "After": "plan.get()", "Project": "presto", "Commit": "0890b3dc4bb18e1e6567fe8e2ca82a81dcd3a9c0", "CompilationUnit": "com.facebook.presto.execution.scheduler.LegacySqlQueryScheduler", "LineNos": {"_1": 92, "_2": 111}, "Names": {"_1": "plan", "_2": "plan"}, "TemplateVariableToCodeBefore": {"TCIVar": "plan"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "plan"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return createClientToServerConnection(nextServer,true);", "OriginalCompleteAfter": "return createClientToServerConnection(nextServer.get(),true);", "Before": "nextServer", "After": "nextServer.get()", "Project": "geode", "Commit": "5e0b25a3247cb12075fd7bba97cb96b0e42dcb2c", "CompilationUnit": "org.apache.geode.cache.client.internal.pooling.ConnectionManagerJUnitTest.DummyFactory", "LineNos": {"_1": 896, "_2": 844}, "Names": {"_1": "nextServer", "_2": "nextServer"}, "TemplateVariableToCodeBefore": {"TCIVar": "nextServer"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "nextServer"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(excludedServers.contains(nextServer))", "OriginalCompleteAfter": "if(excludedServers.contains(nextServer.get()))", "Before": "nextServer", "After": "nextServer.get()", "Project": "geode", "Commit": "5e0b25a3247cb12075fd7bba97cb96b0e42dcb2c", "CompilationUnit": "org.apache.geode.cache.client.internal.pooling.ConnectionManagerJUnitTest.DummyFactory", "LineNos": {"_1": 896, "_2": 844}, "Names": {"_1": "nextServer", "_2": "nextServer"}, "TemplateVariableToCodeBefore": {"TCIVar": "nextServer"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "nextServer"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return scmUsage.getUsed();", "OriginalCompleteAfter": "return scmUsage.get().getUsed();", "Before": "scmUsage", "After": "scmUsage.get()", "Project": "hadoop", "Commit": "732133cb2a8f8667da1ae955d5ce73eef1a0436e", "CompilationUnit": "org.apache.hadoop.ozone.container.common.volume.VolumeUsage", "LineNos": {"_1": 49, "_2": 51}, "Names": {"_1": "scmUsage", "_2": "scmUsage"}, "TemplateVariableToCodeBefore": {"TCIVar": "scmUsage"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "scmUsage"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "cpuBoundSemaphore.acquire();", "OriginalCompleteAfter": "cpuBoundSemaphore.get().acquire();", "Before": "cpuBoundSemaphore", "After": "cpuBoundSemaphore.get()", "Project": "bazel", "Commit": "b5bfcc1ed0388fb5f0e3924d8fd33ea1bb3db0e1", "CompilationUnit": "com.google.devtools.build.lib.skyframe.ConfiguredTargetFunction", "LineNos": {"_1": 138, "_2": 140}, "Names": {"_1": "cpuBoundSemaphore", "_2": "cpuBoundSemaphore"}, "TemplateVariableToCodeBefore": {"TCIVar": "cpuBoundSemaphore"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "cpuBoundSemaphore"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "currentExecutions.remove(watchId);", "OriginalCompleteAfter": "currentExecutions.get().remove(watchId);", "Before": "currentExecutions", "After": "currentExecutions.get()", "Project": "elasticsearch", "Commit": "2c38d12e236a3279daa344bc8b52f0e8f49ad4b5", "CompilationUnit": "org.elasticsearch.xpack.watcher.execution.ExecutionService", "LineNos": {"_1": 94, "_2": 98}, "Names": {"_1": "currentExecutions", "_2": "currentExecutions"}, "TemplateVariableToCodeBefore": {"TCIVar": "currentExecutions"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "currentExecutions"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "boolean executionAlreadyExists=currentExecutions.put(watchId,new WatchExecution(ctx,Thread.currentThread()));", "OriginalCompleteAfter": "boolean executionAlreadyExists=currentExecutions.get().put(watchId,new WatchExecution(ctx,Thread.currentThread()));", "Before": "currentExecutions", "After": "currentExecutions.get()", "Project": "elasticsearch", "Commit": "2c38d12e236a3279daa344bc8b52f0e8f49ad4b5", "CompilationUnit": "org.elasticsearch.xpack.watcher.execution.ExecutionService", "LineNos": {"_1": 94, "_2": 98}, "Names": {"_1": "currentExecutions", "_2": "currentExecutions"}, "TemplateVariableToCodeBefore": {"TCIVar": "currentExecutions"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "currentExecutions"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "response.cancelQuit();", "OriginalCompleteAfter": "quitResponse.get().cancelQuit();", "Before": "response", "After": "response.get()", "Project": "cryptomator", "Commit": "c6b786a771824444fabf764a10abfcee3128fa1f", "CompilationUnit": "org.cryptomator.ui.quit.QuitController", "LineNos": {"_1": 27, "_2": 31}, "Names": {"_1": "response", "_2": "quitResponse"}, "TemplateVariableToCodeBefore": {"TCIVar": "response"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "response"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "complete.execute();", "OriginalCompleteAfter": "complete.get().execute();", "Before": "complete", "After": "complete.get()", "Project": "ratpack", "Commit": "9e10c1b42390fe8ca272bbf435cd1f79bd8216bf", "CompilationUnit": "ratpack.exec.internal.DefaultExecution.MultiEventExecStream", "LineNos": {"_1": 496, "_2": 538}, "Names": {"_1": "complete", "_2": "complete"}, "TemplateVariableToCodeBefore": {"TCIVar": "complete"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "complete"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "onFrame(serverSession,frame,callback);", "OriginalCompleteAfter": "onFrame(serverSession.get(),frame,callback);", "Before": "serverSession", "After": "serverSession.get()", "Project": "jetty.project", "Commit": "55f82ceeecbcc2ae95a016557f0b8808e99562ac", "CompilationUnit": "org.eclipse.jetty.websocket.core.proxy.ProxyFrameHandler", "LineNos": {"_1": 23, "_2": 56}, "Names": {"_1": "serverSession", "_2": "serverSession"}, "TemplateVariableToCodeBefore": {"TCIVar": "serverSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "serverSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "SpawnResult result=fallbackRunner.exec(spawn,context);", "OriginalCompleteAfter": "SpawnResult result=fallbackRunner.get().exec(spawn,context);", "Before": "fallbackRunner", "After": "fallbackRunner.get()", "Project": "bazel", "Commit": "d6ce2643811b7814be43e4a6763c1663412831fe", "CompilationUnit": "com.google.devtools.build.lib.remote.RemoteSpawnRunner", "LineNos": {"_1": 85, "_2": 86}, "Names": {"_1": "fallbackRunner", "_2": "fallbackRunner"}, "TemplateVariableToCodeBefore": {"TCIVar": "fallbackRunner"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fallbackRunner"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return fallbackRunner.exec(spawn,context);", "OriginalCompleteAfter": "return fallbackRunner.get().exec(spawn,context);", "Before": "fallbackRunner", "After": "fallbackRunner.get()", "Project": "bazel", "Commit": "d6ce2643811b7814be43e4a6763c1663412831fe", "CompilationUnit": "com.google.devtools.build.lib.remote.RemoteSpawnRunner", "LineNos": {"_1": 85, "_2": 86}, "Names": {"_1": "fallbackRunner", "_2": "fallbackRunner"}, "TemplateVariableToCodeBefore": {"TCIVar": "fallbackRunner"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fallbackRunner"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return fallbackRunner.exec(spawn,context);", "OriginalCompleteAfter": "return fallbackRunner.get().exec(spawn,context);", "Before": "fallbackRunner", "After": "fallbackRunner.get()", "Project": "bazel", "Commit": "d6ce2643811b7814be43e4a6763c1663412831fe", "CompilationUnit": "com.google.devtools.build.lib.remote.RemoteSpawnRunner", "LineNos": {"_1": 85, "_2": 86}, "Names": {"_1": "fallbackRunner", "_2": "fallbackRunner"}, "TemplateVariableToCodeBefore": {"TCIVar": "fallbackRunner"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "fallbackRunner"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "id=mDb.get(mEdgesColumn,RocksUtils.toByteArray(inodeId,name));", "OriginalCompleteAfter": "id=db().get(mEdgesColumn.get(),RocksUtils.toByteArray(inodeId,name));", "Before": "mEdgesColumn", "After": "mEdgesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 74, "_2": 71}, "Names": {"_1": "mEdgesColumn", "_2": "mEdgesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mEdgesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mEdgesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "mDb.delete(mEdgesColumn,mDisableWAL,RocksUtils.toByteArray(parentId,name));", "OriginalCompleteAfter": "db().delete(mEdgesColumn.get(),mDisableWAL,RocksUtils.toByteArray(parentId,name));", "Before": "mEdgesColumn", "After": "mEdgesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 74, "_2": 71}, "Names": {"_1": "mEdgesColumn", "_2": "mEdgesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mEdgesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mEdgesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "mDb.put(mEdgesColumn,mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId));", "OriginalCompleteAfter": "db().put(mEdgesColumn.get(),mDisableWAL,RocksUtils.toByteArray(parentId,childName),Longs.toByteArray(childId));", "Before": "mEdgesColumn", "After": "mEdgesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 74, "_2": 71}, "Names": {"_1": "mEdgesColumn", "_2": "mEdgesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mEdgesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mEdgesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "inode=mDb.get(mInodesColumn,Longs.toByteArray(id));", "OriginalCompleteAfter": "inode=db().get(mInodesColumn.get(),Longs.toByteArray(id));", "Before": "mInodesColumn", "After": "mInodesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 73, "_2": 70}, "Names": {"_1": "mInodesColumn", "_2": "mInodesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mInodesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mInodesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "mDb.put(mInodesColumn,mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray());", "OriginalCompleteAfter": "db().put(mInodesColumn.get(),mDisableWAL,Longs.toByteArray(inode.getId()),inode.toProto().toByteArray());", "Before": "mInodesColumn", "After": "mInodesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 73, "_2": 70}, "Names": {"_1": "mInodesColumn", "_2": "mInodesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mInodesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mInodesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "mDb.delete(mInodesColumn,mDisableWAL,id);", "OriginalCompleteAfter": "db().delete(mInodesColumn.get(),mDisableWAL,id);", "Before": "mInodesColumn", "After": "mInodesColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksInodeStore", "LineNos": {"_1": 73, "_2": 70}, "Names": {"_1": "mInodesColumn", "_2": "mInodesColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mInodesColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mInodesColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "meta=mDb.get(mBlockMetaColumn,Longs.toByteArray(id));", "OriginalCompleteAfter": "meta=db().get(mBlockMetaColumn.get(),Longs.toByteArray(id));", "Before": "mBlockMetaColumn", "After": "mBlockMetaColumn.get()", "Project": "alluxio", "Commit": "646fe30a935d434cadb0b7f186b2c461f9a67b0c", "CompilationUnit": "alluxio.master.metastore.rocks.RocksBlockStore", "LineNos": {"_1": 57, "_2": 58}, "Names": {"_1": "mBlockMetaColumn", "_2": "mBlockMetaColumn"}, "TemplateVariableToCodeBefore": {"TCIVar": "mBlockMetaColumn"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "mBlockMetaColumn"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(result.getException() != null)", "OriginalCompleteAfter": "if(result.get().getException() != null)", "Before": "result", "After": "result.get()", "Project": "tomcat", "Commit": "69c5b520a068ea5b9366fc077f49bd2fbef9ccf5", "CompilationUnit": "org.apache.tomcat.websocket.FutureToSendHandler", "LineNos": {"_1": 40, "_2": 41}, "Names": {"_1": "result", "_2": "result"}, "TemplateVariableToCodeBefore": {"TCIVar": "result"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "result"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "throw new ExecutionException(result.getException());", "OriginalCompleteAfter": "throw new ExecutionException(result.get().getException());", "Before": "result", "After": "result.get()", "Project": "tomcat", "Commit": "69c5b520a068ea5b9366fc077f49bd2fbef9ccf5", "CompilationUnit": "org.apache.tomcat.websocket.FutureToSendHandler", "LineNos": {"_1": 40, "_2": 41}, "Names": {"_1": "result", "_2": "result"}, "TemplateVariableToCodeBefore": {"TCIVar": "result"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "result"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(result.getException() != null)", "OriginalCompleteAfter": "if(result.get().getException() != null)", "Before": "result", "After": "result.get()", "Project": "tomcat", "Commit": "69c5b520a068ea5b9366fc077f49bd2fbef9ccf5", "CompilationUnit": "org.apache.tomcat.websocket.FutureToSendHandler", "LineNos": {"_1": 40, "_2": 41}, "Names": {"_1": "result", "_2": "result"}, "TemplateVariableToCodeBefore": {"TCIVar": "result"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "result"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "throw new ExecutionException(result.getException());", "OriginalCompleteAfter": "throw new ExecutionException(result.get().getException());", "Before": "result", "After": "result.get()", "Project": "tomcat", "Commit": "69c5b520a068ea5b9366fc077f49bd2fbef9ccf5", "CompilationUnit": "org.apache.tomcat.websocket.FutureToSendHandler", "LineNos": {"_1": 40, "_2": 41}, "Names": {"_1": "result", "_2": "result"}, "TemplateVariableToCodeBefore": {"TCIVar": "result"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "result"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withStop);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withStop.get());", "Before": "withStop", "After": "withStop.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithStopInRemoteVm", "LineNos": {"_1": 538, "_2": 553}, "Names": {"_1": "withStop", "_2": "withStop"}, "TemplateVariableToCodeBefore": {"TCIVar": "withStop"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withStop"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withStop);", "OriginalCompleteAfter": "reference.set(withStop.get());", "Before": "withStop", "After": "withStop.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithStopInRemoteVm", "LineNos": {"_1": 538, "_2": 553}, "Names": {"_1": "withStop", "_2": "withStop"}, "TemplateVariableToCodeBefore": {"TCIVar": "withStop"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withStop"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withStop);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withStop.get());", "Before": "withStop", "After": "withStop.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithStopInLocalVm", "LineNos": {"_1": 519, "_2": 533}, "Names": {"_1": "withStop", "_2": "withStop"}, "TemplateVariableToCodeBefore": {"TCIVar": "withStop"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withStop"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withStop);", "OriginalCompleteAfter": "reference.set(withStop.get());", "Before": "withStop", "After": "withStop.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithStopInLocalVm", "LineNos": {"_1": 519, "_2": 533}, "Names": {"_1": "withStop", "_2": "withStop"}, "TemplateVariableToCodeBefore": {"TCIVar": "withStop"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withStop"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withStop);", "OriginalCompleteAfter": "reference.set(withStop.get());", "Before": "withStop", "After": "withStop.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithStopInEachVm", "LineNos": {"_1": 562, "_2": 578}, "Names": {"_1": "withStop", "_2": "withStop"}, "TemplateVariableToCodeBefore": {"TCIVar": "withStop"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withStop"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withDisconnect);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInRemoteVm", "LineNos": {"_1": 467, "_2": 479}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withDisconnect);", "OriginalCompleteAfter": "reference.set(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInRemoteVm", "LineNos": {"_1": 467, "_2": 479}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withDisconnect);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInLocalVm", "LineNos": {"_1": 448, "_2": 459}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withDisconnect);", "OriginalCompleteAfter": "reference.set(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInLocalVm", "LineNos": {"_1": 448, "_2": 459}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withDisconnect);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInEachVm", "LineNos": {"_1": 491, "_2": 504}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withDisconnect);", "OriginalCompleteAfter": "reference.set(withDisconnect.get());", "Before": "withDisconnect", "After": "withDisconnect.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithDisconnectInEachVm", "LineNos": {"_1": 491, "_2": 504}, "Names": {"_1": "withDisconnect", "_2": "withDisconnect"}, "TemplateVariableToCodeBefore": {"TCIVar": "withDisconnect"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withDisconnect"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withClose);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInRemoteVm", "LineNos": {"_1": 396, "_2": 405}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withClose);", "OriginalCompleteAfter": "reference.set(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInRemoteVm", "LineNos": {"_1": 396, "_2": 405}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withClose);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInLocalVm", "LineNos": {"_1": 377, "_2": 385}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withClose);", "OriginalCompleteAfter": "reference.set(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInLocalVm", "LineNos": {"_1": 377, "_2": 385}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(withClose);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInEachVm", "LineNos": {"_1": 420, "_2": 430}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(withClose);", "OriginalCompleteAfter": "reference.set(withClose.get());", "Before": "withClose", "After": "withClose.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetWithCloseInEachVm", "LineNos": {"_1": 420, "_2": 430}, "Names": {"_1": "withClose", "_2": "withClose"}, "TemplateVariableToCodeBefore": {"TCIVar": "withClose"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "withClose"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(closeable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInRemoteVm", "LineNos": {"_1": 325, "_2": 331}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(closeable);", "OriginalCompleteAfter": "reference.set(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInRemoteVm", "LineNos": {"_1": 325, "_2": 331}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(closeable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInLocalVm", "LineNos": {"_1": 306, "_2": 311}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(closeable);", "OriginalCompleteAfter": "reference.set(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInLocalVm", "LineNos": {"_1": 306, "_2": 311}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(closeable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInEachVm", "LineNos": {"_1": 349, "_2": 356}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(closeable);", "OriginalCompleteAfter": "reference.set(closeable.get());", "Before": "closeable", "After": "closeable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetCloseableInEachVm", "LineNos": {"_1": 349, "_2": 356}, "Names": {"_1": "closeable", "_2": "closeable"}, "TemplateVariableToCodeBefore": {"TCIVar": "closeable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "closeable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(autoCloseable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInRemoteVm", "LineNos": {"_1": 254, "_2": 257}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(autoCloseable);", "OriginalCompleteAfter": "reference.set(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInRemoteVm", "LineNos": {"_1": 254, "_2": 257}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(autoCloseable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInLocalVm", "LineNos": {"_1": 215, "_2": 217}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(autoCloseable);", "OriginalCompleteAfter": "reference.set(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInLocalVm", "LineNos": {"_1": 215, "_2": 217}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(autoCloseable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInEachVm", "LineNos": {"_1": 278, "_2": 282}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(autoCloseable);", "OriginalCompleteAfter": "reference.set(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.SetAutoCloseableInEachVm", "LineNos": {"_1": 278, "_2": 282}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(reference.get()).isSameAs(autoCloseable);", "OriginalCompleteAfter": "assertThat(reference.get()).isSameAs(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.DisableAutoCloseInLocalVm", "LineNos": {"_1": 234, "_2": 237}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "reference.set(autoCloseable);", "OriginalCompleteAfter": "reference.set(autoCloseable.get());", "Before": "autoCloseable", "After": "autoCloseable.get()", "Project": "geode", "Commit": "ae0d6bcdbc41a364b21bc5c55bd982271ad1284b", "CompilationUnit": "org.apache.geode.test.dunit.rules.tests.DistributedReferenceTest.DisableAutoCloseInLocalVm", "LineNos": {"_1": 234, "_2": 237}, "Names": {"_1": "autoCloseable", "_2": "autoCloseable"}, "TemplateVariableToCodeBefore": {"TCIVar": "autoCloseable"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "autoCloseable"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "startImporters(m_importers.values());", "OriginalCompleteAfter": "startImporters(m_importers.get().values());", "Before": "m_importers", "After": "m_importers.get()", "Project": "voltdb", "Commit": "4b697a4af25891fe9027e7f787ee75d073d6f863", "CompilationUnit": "org.voltdb.importer.ImporterLifeCycleManager", "LineNos": {"_1": 55, "_2": 56}, "Names": {"_1": "m_importers", "_2": "m_importers"}, "TemplateVariableToCodeBefore": {"TCIVar": "m_importers"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "m_importers"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "if(buildRunning && updateThread == null)", "OriginalCompleteAfter": "if(buildRunning && updateThread.get() == null)", "Before": "updateThread", "After": "updateThread.get()", "Project": "bazel", "Commit": "2421c5f7de8d3aaa66049c78944a4ac3bf3367ab", "CompilationUnit": "com.google.devtools.build.lib.runtime.ExperimentalEventHandler", "LineNos": {"_1": 102, "_2": 103}, "Names": {"_1": "updateThread", "_2": "updateThread"}, "TemplateVariableToCodeBefore": {"TCIVar": "updateThread"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "updateThread"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "puttingThread.interrupt();", "OriginalCompleteAfter": "puttingThread.get().interrupt();", "Before": "puttingThread", "After": "puttingThread.get()", "Project": "geode", "Commit": "52a6e4279b74f6c374061b9132df42fa8cb7f89c", "CompilationUnit": "org.apache.geode.internal.cache.InterruptDiskJUnitTest", "LineNos": {"_1": 52, "_2": 48}, "Names": {"_1": "puttingThread", "_2": "puttingThread"}, "TemplateVariableToCodeBefore": {"TCIVar": "puttingThread"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "puttingThread"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "return FileStateValue.create(rootedPath,tsgm);", "OriginalCompleteAfter": "return FileStateValue.create(rootedPath,tsgm.get());", "Before": "tsgm", "After": "tsgm.get()", "Project": "bazel", "Commit": "c73051c6baad0aaaf1fdf34d5ad19602b8df628a", "CompilationUnit": "com.google.devtools.build.lib.skyframe.FileStateFunction", "LineNos": {"_1": 33, "_2": 34}, "Names": {"_1": "tsgm", "_2": "tsgm"}, "TemplateVariableToCodeBefore": {"TCIVar": "tsgm"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "tsgm"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "metadataHandler=new ActionMetadataHandler(state.inputArtifactData,action.getOutputs(),tsgm);", "OriginalCompleteAfter": "metadataHandler=new ActionMetadataHandler(state.inputArtifactData,action.getOutputs(),tsgm.get());", "Before": "tsgm", "After": "tsgm.get()", "Project": "bazel", "Commit": "c73051c6baad0aaaf1fdf34d5ad19602b8df628a", "CompilationUnit": "com.google.devtools.build.lib.skyframe.ActionExecutionFunction", "LineNos": {"_1": 81, "_2": 82}, "Names": {"_1": "tsgm", "_2": "tsgm"}, "TemplateVariableToCodeBefore": {"TCIVar": "tsgm"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "tsgm"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "metadataHandler=new ActionMetadataHandler(state.inputArtifactData,action.getOutputs(),tsgm);", "OriginalCompleteAfter": "metadataHandler=new ActionMetadataHandler(state.inputArtifactData,action.getOutputs(),tsgm.get());", "Before": "tsgm", "After": "tsgm.get()", "Project": "bazel", "Commit": "c73051c6baad0aaaf1fdf34d5ad19602b8df628a", "CompilationUnit": "com.google.devtools.build.lib.skyframe.ActionExecutionFunction", "LineNos": {"_1": 81, "_2": 82}, "Names": {"_1": "tsgm", "_2": "tsgm"}, "TemplateVariableToCodeBefore": {"TCIVar": "tsgm"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "tsgm"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "LOGGER.debug(STR0,path,sessionId,lock);", "OriginalCompleteAfter": "LOGGER.debug(STR0,path,sessionId.get(),lock);", "Before": "sessionId", "After": "sessionId.get()", "Project": "camel", "Commit": "96a7cfdd691c35ca5c8d66de60103fa799aec9eb", "CompilationUnit": "org.apache.camel.component.consul.ha.ConsulClusterView", "LineNos": {"_1": 52, "_2": 47}, "Names": {"_1": "sessionId", "_2": "sessionId"}, "TemplateVariableToCodeBefore": {"TCIVar": "sessionId"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "sessionId"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "LOGGER.debug(STR0,sessionId);", "OriginalCompleteAfter": "LOGGER.debug(STR0,sessionId.get());", "Before": "sessionId", "After": "sessionId.get()", "Project": "camel", "Commit": "96a7cfdd691c35ca5c8d66de60103fa799aec9eb", "CompilationUnit": "org.apache.camel.component.consul.ha.ConsulClusterView", "LineNos": {"_1": 52, "_2": 47}, "Names": {"_1": "sessionId", "_2": "sessionId"}, "TemplateVariableToCodeBefore": {"TCIVar": "sessionId"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "sessionId"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "b.append(getContextPath()).append(',').append(getBaseResource()).append(',').append(_availability);", "OriginalCompleteAfter": "b.append(getContextPath()).append(',').append(getBaseResource()).append(',').append(_availability.get());", "Before": "_availability", "After": "_availability.get()", "Project": "jetty.project", "Commit": "66ec16006edb96a5904f60b9aa067dfeb4217528", "CompilationUnit": "org.eclipse.jetty.server.handler.ContextHandler", "LineNos": {"_1": 236, "_2": 241}, "Names": {"_1": "_availability", "_2": "_availability"}, "TemplateVariableToCodeBefore": {"TCIVar": "_availability"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "_availability"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "@SuppressWarnings(STR0) Iterator iter=m_kSafetySet.iterator();", "OriginalCompleteAfter": "@SuppressWarnings(STR0) Iterator iter=m_kSafetySet.get().iterator();", "Before": "m_kSafetySet", "After": "m_kSafetySet.get()", "Project": "voltdb", "Commit": "961af3d1940ee202019ee393450d56c6e00e27aa", "CompilationUnit": "org.voltdb.iv2.KSafetyStats", "LineNos": {"_1": 32, "_2": 33}, "Names": {"_1": "m_kSafetySet", "_2": "m_kSafetySet"}, "TemplateVariableToCodeBefore": {"TCIVar": "m_kSafetySet"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "m_kSafetySet"}, "isRelevant": "Uses", "isSafe": true}]