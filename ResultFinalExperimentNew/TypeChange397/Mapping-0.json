[{"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomNonProjectsSet,null,UserRole.USER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomNonProjectsSet,null,UserRole.USER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomNonProjectsSet,null,UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomNonProjectsSet,null,UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 275, "_2": 273}, "Names": {"_1": "randomNonProjectsSet", "_2": "randomNonProjectsSet"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomNonProjectsSet", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomNonProjectsSet", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomNonProjectsSet,user.getId(),UserRole.USER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomNonProjectsSet,user.getId(),UserRole.USER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomNonProjectsSet,user.getId(),UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomNonProjectsSet,user.getId(),UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 286, "_2": 283}, "Names": {"_1": "randomNonProjectsSet", "_2": "randomNonProjectsSet"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomNonProjectsSet", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomNonProjectsSet", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,UserRole.USER)).containsAll(randomPublicProjectIds);", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,null,UserRole.USER)).containsAll(randomPublicProjectUuids);", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,null,UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),UserRole.USER)).containsAll(randomPublicProjectIds);", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,user.getId(),UserRole.USER)).containsAll(randomPublicProjectUuids);", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,user.getId(),UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,UserRole.CODEVIEWER)).containsAll(randomPublicProjectIds);", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,null,UserRole.CODEVIEWER)).containsAll(randomPublicProjectUuids);", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,UserRole.CODEVIEWER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,null,UserRole.CODEVIEWER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "Set<Long> authorizedProjectIds=dbClient.authorizationDao().keepAuthorizedProjectIds(dbSession,componentIds,userSession.getUserId(),UserRole.USER);", "OriginalCompleteAfter": "Set<String> authorizedProjectUuids=dbClient.authorizationDao().keepAuthorizedProjectUuids(dbSession,componentUuids,userSession.getUserId(),UserRole.USER);", "Before": "dbClient.authorizationDao().keepAuthorizedProjectIds(dbSession,componentIds,userSession.getUserId(),UserRole.USER)", "After": "dbClient.authorizationDao().keepAuthorizedProjectUuids(dbSession,componentIds,userSession.getUserId(),UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.server.notification.ws.ListAction", "LineNos": {"_1": 161, "_2": 161}, "Names": {"_1": "componentIds", "_2": "componentUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "componentIds", "v0": "dbClient.authorizationDao()", "v1": "userSession.getUserId()", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "componentIds", "v0": "dbClient.authorizationDao()", "v1": "userSession.getUserId()", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),UserRole.CODEVIEWER)).containsAll(randomPublicProjectIds);", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,user.getId(),UserRole.CODEVIEWER)).containsAll(randomPublicProjectUuids);", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),UserRole.CODEVIEWER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,user.getId(),UserRole.CODEVIEWER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,randomPermission)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,null,randomPermission)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,null,randomPermission)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,null,randomPermission)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "randomPermission", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "null", "v2": "randomPermission", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),randomPermission)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectUuids,user.getId(),randomPermission)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPublicProjectIds,user.getId(),randomPermission)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPublicProjectIds,user.getId(),randomPermission)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 74, "_2": 74}, "Names": {"_1": "randomPublicProjectIds", "_2": "randomPublicProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "randomPermission", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPublicProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "randomPermission", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),UserRole.USER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,user.getId(),UserRole.USER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,user.getId(),UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,UserRole.USER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,null,UserRole.USER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,UserRole.USER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,null,UserRole.USER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.USER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),UserRole.CODEVIEWER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,user.getId(),UserRole.CODEVIEWER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),UserRole.CODEVIEWER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,user.getId(),UserRole.CODEVIEWER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,UserRole.CODEVIEWER)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,null,UserRole.CODEVIEWER)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,UserRole.CODEVIEWER)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,null,UserRole.CODEVIEWER)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "UserRole.CODEVIEWER", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),perm)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,user.getId(),perm)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),perm)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,user.getId(),perm)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "perm", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "perm", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),randomPermission)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,user.getId(),randomPermission)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,user.getId(),randomPermission)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,user.getId(),randomPermission)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "randomPermission", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "user.getId()", "v2": "randomPermission", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,perm)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,null,perm)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,perm)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,null,perm)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "perm", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "perm", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}, {"OriginalCompleteBefore": "assertThat(underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,randomPermission)).isEmpty();", "OriginalCompleteAfter": "assertThat(underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectUuids,null,randomPermission)).isEmpty();", "Before": "underTest.keepAuthorizedProjectIds(dbSession,randomPrivateProjectIds,null,randomPermission)", "After": "underTest.keepAuthorizedProjectUuids(dbSession,randomPrivateProjectIds,null,randomPermission)", "Project": "sonarqube", "Commit": "d8081f847f92247a64166572605876e67e9a34ed", "CompilationUnit": "org.sonar.db.permission.AuthorizationDaoTest", "LineNos": {"_1": 75, "_2": 75}, "Names": {"_1": "randomPrivateProjectIds", "_2": "randomPrivateProjectUuids"}, "TemplateVariableToCodeBefore": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "randomPermission", "v3": "dbSession"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"TCIVar": "randomPrivateProjectIds", "v0": "underTest", "v1": "null", "v2": "randomPermission", "v3": "dbSession"}, "isRelevant": "Uses", "isSafe": true}]