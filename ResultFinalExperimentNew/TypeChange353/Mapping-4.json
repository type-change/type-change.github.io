[{"OriginalCompleteBefore": "String missingTargetsStr=Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty())).collect(joining(STR0));", "OriginalCompleteAfter": "ImmutableSet<String> missingTargets=Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty())).collect(toImmutableSet());", "Before": "Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty())).collect(joining(STR0))", "After": "Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty())).collect(toImmutableSet())", "Project": "bazel", "Commit": "dd5cae9f77102e6f1cf9b550dcb56e6f6a916538", "CompilationUnit": "com.google.devtools.build.buildjar.javac.plugins.dependency.DependencyModule.Builder.DefaultFixMessage", "LineNos": {"_1": 346, "_2": 347}, "Names": {"_1": "missingTargetsStr", "_2": "missingTargets"}, "TemplateVariableToCodeBefore": {"v0": "Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty()))"}, "RelevantImports": [], "TemplateVariableToCodeAfter": {"v0": "Streams.stream(missing).flatMap(owner -> owner.label().map(Stream::of).orElse(Stream.empty()))"}, "isRelevant": "AssignedTo", "isSafe": false}]